{"version":3,"file":"index-DLk6_KXT.js","sources":["../../api-client.js","../../src/js/modules/ThemeManager.ts","../../src/js/modules/NotificationManager.ts","../../src/js/modules/DataManager.ts","../../src/js/modules/UIManager.ts","../../src/js/modules/ChartManager.ts","../../src/js/modules/TransactionManager.ts","../../src/js/modules/CategoryManager.ts","../../src/js/modules/SavingsManager.ts","../../src/js/modules/RecurringManager.ts","../../src/js/modules/ExportManager.ts","../../src/js/modules/DragDropManager.ts","../../src/js/modules/WidgetManager.ts","../../src/js/modules/CalendarManager.ts","../../src/js/modules/TouchGestureManager.ts","../../src/main.ts"],"sourcesContent":["// Client API pour communiquer avec le serveur\r\nclass APIClient {\r\n    constructor(baseURL = '') {\r\n        this.baseURL = baseURL;\r\n    }\r\n\r\n    async request(endpoint, options = {}) {\r\n        const url = `${this.baseURL}${endpoint}`;\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                ...options.headers\r\n            },\r\n            ...options\r\n        };\r\n\r\n        try {\r\n            const response = await fetch(url, config);\r\n            \r\n            if (!response.ok) {\r\n                const error = await response.json().catch(() => ({ error: 'Erreur serveur' }));\r\n                throw new Error(error.error || `HTTP ${response.status}`);\r\n            }\r\n\r\n            return await response.json();\r\n        } catch (error) {\r\n            console.error(`Erreur API ${endpoint}:`, error);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    // R√©cup√©rer toutes les donn√©es\r\n    async getData() {\r\n        return this.request('/api/data');\r\n    }\r\n\r\n    // Sauvegarder toutes les donn√©es\r\n    async saveData(data) {\r\n        return this.request('/api/data', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n\r\n    // Ajouter une transaction\r\n    async addTransaction(transaction) {\r\n        return this.request('/api/transactions', {\r\n            method: 'POST',\r\n            body: JSON.stringify(transaction)\r\n        });\r\n    }\r\n\r\n    // Modifier une transaction\r\n    async updateTransaction(id, transaction) {\r\n        return this.request(`/api/transactions/${id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(transaction)\r\n        });\r\n    }\r\n\r\n    // Supprimer une transaction\r\n    async deleteTransaction(id) {\r\n        return this.request(`/api/transactions/${id}`, {\r\n            method: 'DELETE'\r\n        });\r\n    }\r\n}\r\n\r\n// Instance globale\r\nwindow.apiClient = new APIClient();\r\n","import type { ThemeToggleResult } from '@/types';\n\nexport type ColorTheme = 'blue' | 'green' | 'red' | 'purple' | 'orange' | 'pink';\n\nexport interface ColorThemeConfig {\n    name: string;\n    primary: string;\n    primaryDark: string;\n    gradient: string;\n}\n\nexport class ThemeManager {\n    private isDark: boolean;\n    private colorTheme: ColorTheme;\n\n    private themes: Record<ColorTheme, ColorThemeConfig> = {\n        blue: {\n            name: 'Bleu',\n            primary: '#6366f1',\n            primaryDark: '#4f46e5',\n            gradient: 'from-slate-900 via-blue-900 to-slate-900'\n        },\n        green: {\n            name: 'Vert',\n            primary: '#10b981',\n            primaryDark: '#059669',\n            gradient: 'from-slate-900 via-green-900 to-slate-900'\n        },\n        red: {\n            name: 'Rouge',\n            primary: '#ef4444',\n            primaryDark: '#dc2626',\n            gradient: 'from-slate-900 via-red-900 to-slate-900'\n        },\n        purple: {\n            name: 'Violet',\n            primary: '#a855f7',\n            primaryDark: '#9333ea',\n            gradient: 'from-slate-900 via-purple-900 to-slate-900'\n        },\n        orange: {\n            name: 'Orange',\n            primary: '#f97316',\n            primaryDark: '#ea580c',\n            gradient: 'from-slate-900 via-orange-900 to-slate-900'\n        },\n        pink: {\n            name: 'Rose',\n            primary: '#ec4899',\n            primaryDark: '#db2777',\n            gradient: 'from-slate-900 via-pink-900 to-slate-900'\n        }\n    };\n\n    constructor() {\n        this.isDark = localStorage.getItem('theme') === 'dark';\n        this.colorTheme = (localStorage.getItem('color-theme') as ColorTheme) || 'blue';\n        this.applyTheme();\n        this.applyColorTheme();\n    }\n\n    // Appliquer le th√®me dark/light\n    private applyTheme(): void {\n        if (this.isDark) {\n            document.documentElement.classList.add('dark');\n        } else {\n            document.documentElement.classList.remove('dark');\n        }\n    }\n\n    // Appliquer le th√®me de couleur\n    private applyColorTheme(): void {\n        const theme = this.themes[this.colorTheme];\n        const root = document.documentElement;\n\n        // Appliquer les couleurs CSS custom properties\n        root.style.setProperty('--color-primary', theme.primary);\n        root.style.setProperty('--color-primary-dark', theme.primaryDark);\n\n        // Changer le gradient du body\n        const body = document.querySelector('body');\n        if (body) {\n            // Retirer tous les anciens gradients\n            body.classList.remove(\n                'from-slate-900', 'via-blue-900', 'via-green-900', 'via-red-900', \n                'via-purple-900', 'via-orange-900', 'via-pink-900', 'to-slate-900'\n            );\n            \n            // Ajouter le nouveau gradient\n            const gradientClasses = theme.gradient.split(' ');\n            body.classList.add(...gradientClasses);\n        }\n\n        console.log(`üé® Th√®me de couleur appliqu√©: ${theme.name}`);\n    }\n\n    // Basculer entre mode sombre et clair\n    toggleTheme(): ThemeToggleResult {\n        this.isDark = !this.isDark;\n        localStorage.setItem('theme', this.isDark ? 'dark' : 'light');\n        \n        this.applyTheme();\n        \n        if (this.isDark) {\n            return { message: 'Mode sombre activ√© üåô', isDark: true };\n        } else {\n            return { message: 'Mode clair activ√© ‚òÄÔ∏è', isDark: false };\n        }\n    }\n\n    // Changer le th√®me de couleur\n    setColorTheme(theme: ColorTheme): void {\n        this.colorTheme = theme;\n        localStorage.setItem('color-theme', theme);\n        this.applyColorTheme();\n    }\n\n    // Obtenir le th√®me de couleur actuel\n    getColorTheme(): ColorTheme {\n        return this.colorTheme;\n    }\n\n    // Obtenir tous les th√®mes disponibles\n    getAvailableThemes(): Record<ColorTheme, ColorThemeConfig> {\n        return this.themes;\n    }\n\n    // Obtenir l'√©tat actuel du th√®me\n    isDarkMode(): boolean {\n        return this.isDark;\n    }\n}\n","import type { DataManager } from './DataManager';\nimport type { UIManager } from './UIManager';\n\n// Gestionnaire de notifications\nexport class NotificationManager {\n    constructor(\n        private dataManager: DataManager,\n        private uiManager: UIManager\n    ) {}\n\n    // V√©rifier toutes les alertes\n    checkAllAlerts(): void {\n        this.checkBudgetAlerts();\n        this.checkGoalAlerts();\n        this.checkRecurringAlerts();\n    }\n\n    // Alertes de budget\n    checkBudgetAlerts(): void {\n        const data = this.dataManager.getData();\n        \n        Object.entries(data.categories).forEach(([, category]) => {\n            const percentage = category.budget > 0 ? (category.spent / category.budget) * 100 : 0;\n            \n            // Alerte √† 80%\n            if (percentage >= 80 && percentage < 100) {\n                this.showNotification(\n                    `‚ö†Ô∏è Attention ! Vous avez d√©pens√© ${percentage.toFixed(0)}% de votre budget ${category.name}`,\n                    'warning'\n                );\n            }\n            \n            // Alerte √† 100%\n            if (percentage >= 100 && percentage < 110) {\n                this.showNotification(\n                    `üö® Budget ${category.name} d√©pass√© ! (${percentage.toFixed(0)}%)`,\n                    'error'\n                );\n            }\n            \n            // Alerte critique √† 120%\n            if (percentage >= 120) {\n                this.showNotification(\n                    `üî¥ ALERTE ! Budget ${category.name} largement d√©pass√© ! (${percentage.toFixed(0)}%)`,\n                    'error'\n                );\n            }\n        });\n    }\n\n    // Alertes pour les objectifs d'√©pargne\n    checkGoalAlerts(): void {\n        const data = this.dataManager.getData();\n        \n        data.savingsGoals.forEach(goal => {\n            const progress = goal.target > 0 ? (goal.current / goal.target) * 100 : 0;\n            const deadline = new Date(goal.deadline);\n            const today = new Date();\n            const daysLeft = Math.ceil((deadline.getTime() - today.getTime()) / (1000 * 60 * 60 * 24));\n            \n            // Objectif atteint\n            if (progress >= 100 && progress < 105) {\n                this.showNotification(\n                    `üéâ F√©licitations ! Objectif \"${goal.name}\" atteint !`,\n                    'success'\n                );\n            }\n            \n            // √âch√©ance proche (7 jours)\n            if (daysLeft <= 7 && daysLeft > 0 && progress < 100) {\n                this.showNotification(\n                    `‚è∞ Plus que ${daysLeft} jours pour atteindre \"${goal.name}\" (${progress.toFixed(0)}%)`,\n                    'warning'\n                );\n            }\n            \n            // √âch√©ance d√©pass√©e\n            if (daysLeft < 0 && progress < 100) {\n                this.showNotification(\n                    `‚ùå Objectif \"${goal.name}\" non atteint (${progress.toFixed(0)}%)`,\n                    'error'\n                );\n            }\n        });\n    }\n\n    // Alertes pour les transactions r√©currentes\n    checkRecurringAlerts(): void {\n        const data = this.dataManager.getData();\n        const today = new Date();\n        const currentDay = today.getDate();\n        \n        data.recurringTransactions.forEach(recurring => {\n            if (!recurring.active) return;\n            \n            // Rappel 2 jours avant\n            if (recurring.frequency === 'monthly' && recurring.day - currentDay === 2) {\n                this.showNotification(\n                    `üìÖ Rappel : \"${recurring.name}\" pr√©vu dans 2 jours (${recurring.amount}‚Ç¨)`,\n                    'info'\n                );\n            }\n            \n            // Rappel le jour m√™me\n            if (recurring.day === currentDay) {\n                this.showNotification(\n                    `üí∞ Aujourd'hui : \"${recurring.name}\" (${recurring.amount}‚Ç¨)`,\n                    'info'\n                );\n            }\n        });\n    }\n\n    // Afficher une notification\n    private showNotification(message: string, type: 'success' | 'error' | 'warning' | 'info' = 'info'): void {\n        this.uiManager.showNotification(message, type);\n        \n        // Notification navigateur si support√©\n        if ('Notification' in window && Notification.permission === 'granted') {\n            new Notification('Budget Manager', {\n                body: message,\n                icon: '/icons/icon-192x192.png',\n                badge: '/icons/icon-96x96.png'\n            });\n        }\n    }\n\n    // Demander la permission pour les notifications\n    async requestNotificationPermission(): Promise<boolean> {\n        if (!('Notification' in window)) {\n            console.log('‚ùå Notifications non support√©es');\n            return false;\n        }\n\n        if (Notification.permission === 'granted') {\n            return true;\n        }\n\n        if (Notification.permission !== 'denied') {\n            const permission = await Notification.requestPermission();\n            return permission === 'granted';\n        }\n\n        return false;\n    }\n\n    // Planifier des v√©rifications p√©riodiques\n    startPeriodicChecks(): void {\n        // V√©rifier toutes les heures\n        setInterval(() => {\n            this.checkAllAlerts();\n        }, 60 * 60 * 1000);\n\n        // V√©rification initiale\n        this.checkAllAlerts();\n    }\n}\n","import type { BudgetData } from '@/types';\n\n// Gestionnaire de donn√©es - Stockage serveur uniquement\nexport class DataManager {\n    private data: BudgetData;\n\n    constructor() {\n        this.data = {\n            salary: 0,\n            currentMonth: new Date().toISOString().slice(0, 7),\n            categories: {},\n            transactions: [],\n            recurringTransactions: [],\n            savingsGoals: []\n        };\n    }\n\n    // Chargement des donn√©es depuis le serveur\n    async loadData(): Promise<BudgetData> {\n        try {\n            console.log('üì° Chargement des donn√©es depuis le serveur...');\n            const response = await (window as any).apiClient.getData();\n            this.data = response;\n            \n            // Initialiser les champs manquants pour compatibilit√©\n            if (!this.data.savingsGoals) {\n                this.data.savingsGoals = [];\n            }\n            if (!this.data.recurringTransactions) {\n                this.data.recurringTransactions = [];\n            }\n            \n            // Ajouter des IDs aux transactions existantes qui n'en ont pas\n            this.data.transactions = this.data.transactions.map((transaction, index) => {\n                if (!transaction.id) {\n                    transaction.id = (Date.now() + index).toString();\n                }\n                return transaction;\n            });\n            \n            console.log('‚úÖ Donn√©es charg√©es depuis le serveur');\n            return this.data;\n        } catch (error) {\n            console.error('‚ùå Erreur chargement donn√©es:', error);\n            throw error;\n        }\n    }\n\n    // Sauvegarde des donn√©es sur le serveur\n    async saveData(): Promise<void> {\n        try {\n            console.log('üíæ Sauvegarde des donn√©es sur le serveur...');\n            await (window as any).apiClient.saveData(this.data);\n            console.log('‚úÖ Donn√©es sauvegard√©es sur le serveur');\n        } catch (error) {\n            console.error('‚ùå Erreur sauvegarde donn√©es:', error);\n            throw error;\n        }\n    }\n\n    // V√©rifier si c'est la premi√®re utilisation\n    isFirstTime(): boolean {\n        return this.data.salary === 0 || Object.keys(this.data.categories).length === 0;\n    }\n\n    // Obtenir les donn√©es\n    getData(): BudgetData {\n        return this.data;\n    }\n\n    // Mettre √† jour les donn√©es\n    setData(data: BudgetData): void {\n        this.data = data;\n    }\n\n    // R√©initialiser le mois\n    resetMonth(): void {\n        Object.keys(this.data.categories).forEach(key => {\n            this.data.categories[key].spent = 0;\n        });\n        this.data.transactions = [];\n    }\n\n    // R√©initialiser tout\n    resetAll(): void {\n        this.data = {\n            salary: 0,\n            currentMonth: new Date().toISOString().slice(0, 7),\n            categories: {},\n            transactions: [],\n            recurringTransactions: [],\n            savingsGoals: []\n        };\n    }\n\n    // Export des donn√©es\n    exportData(): void {\n        const dataStr = JSON.stringify(this.data, null, 2);\n        const dataBlob = new Blob([dataStr], { type: 'application/json' });\n        const url = URL.createObjectURL(dataBlob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `budget-backup-${new Date().toISOString().slice(0, 10)}.json`;\n        link.click();\n        URL.revokeObjectURL(url);\n    }\n\n    // Import des donn√©es\n    async importData(file: File): Promise<BudgetData> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                try {\n                    const imported = JSON.parse(e.target?.result as string);\n                    this.data = imported;\n                    resolve(this.data);\n                } catch (error) {\n                    reject(error);\n                }\n            };\n            reader.onerror = reject;\n            reader.readAsText(file);\n        });\n    }\n}\n","import type { Transaction, NotificationType } from '@/types';\nimport type { DataManager } from './DataManager';\n\n// Gestionnaire d'interface utilisateur\nexport class UIManager {\n    constructor(private dataManager: DataManager) {}\n\n    // Afficher une notification\n    showNotification(message: string, type: NotificationType = 'success'): void {\n        const notification = document.createElement('div');\n        notification.className = `fixed top-4 right-4 z-50 p-4 rounded-lg shadow-lg transition-all duration-300 transform translate-x-full max-w-sm`;\n        \n        if (type === 'success') {\n            notification.classList.add('bg-green-500', 'text-white');\n            notification.innerHTML = `<i class=\"fas fa-check-circle mr-2\"></i>${message}`;\n        } else if (type === 'error') {\n            notification.classList.add('bg-red-500', 'text-white');\n            notification.innerHTML = `<i class=\"fas fa-exclamation-circle mr-2\"></i>${message}`;\n        } else if (type === 'warning') {\n            notification.classList.add('bg-yellow-500', 'text-white');\n            notification.innerHTML = `<i class=\"fas fa-exclamation-triangle mr-2\"></i>${message}`;\n        } else if (type === 'info') {\n            notification.classList.add('bg-blue-500', 'text-white');\n            notification.innerHTML = `<i class=\"fas fa-info-circle mr-2\"></i>${message}`;\n        }\n        \n        document.body.appendChild(notification);\n        \n        // Animation d'entr√©e\n        setTimeout(() => {\n            notification.classList.remove('translate-x-full');\n        }, 100);\n        \n        // Animation de sortie et suppression\n        setTimeout(() => {\n            notification.classList.add('translate-x-full');\n            setTimeout(() => {\n                if (document.body.contains(notification)) {\n                    document.body.removeChild(notification);\n                }\n            }, 300);\n        }, 4000);\n    }\n\n    // Afficher l'√©cran de configuration\n    showSetupScreen(): void {\n        document.getElementById('setup-screen')!.classList.remove('hidden');\n        document.getElementById('dashboard-screen')!.classList.add('hidden');\n        document.getElementById('edit-budget-btn')!.classList.add('hidden');\n    }\n\n    // Afficher le dashboard\n    showDashboard(): void {\n        console.log('üìä Affichage du dashboard...');\n        document.getElementById('setup-screen')!.classList.add('hidden');\n        document.getElementById('dashboard-screen')!.classList.remove('hidden');\n        document.getElementById('edit-budget-btn')!.classList.remove('hidden');\n        console.log('‚úÖ Dashboard affich√©');\n    }\n\n    // Mettre √† jour le mois actuel\n    updateCurrentMonth(): void {\n        const now = new Date();\n        const monthNames = [\n            'Janvier', 'F√©vrier', 'Mars', 'Avril', 'Mai', 'Juin',\n            'Juillet', 'Ao√ªt', 'Septembre', 'Octobre', 'Novembre', 'D√©cembre'\n        ];\n        \n        const monthElement = document.getElementById('current-month');\n        if (monthElement) {\n            monthElement.textContent = `${monthNames[now.getMonth()]} ${now.getFullYear()}`;\n        }\n    }\n\n    // Mettre √† jour le r√©sum√©\n    updateSummary(totalSpent: number, remaining: number): void {\n        const data = this.dataManager.getData();\n        \n        console.log('üí∞ Mise √† jour r√©sum√©:', {\n            salary: data.salary,\n            totalSpent: totalSpent,\n            remaining: remaining\n        });\n        \n        const salaryEl = document.getElementById('salary-display');\n        const spentEl = document.getElementById('spent-display');\n        const remainingEl = document.getElementById('remaining-display');\n        \n        // V√©rifier que les √©l√©ments existent\n        if (!salaryEl || !spentEl || !remainingEl) {\n            console.warn('‚ö†Ô∏è √âl√©ments du r√©sum√© non trouv√©s, dashboard pas encore affich√©');\n            console.log('√âl√©ments trouv√©s:', { salaryEl, spentEl, remainingEl });\n            return;\n        }\n        \n        salaryEl.textContent = `${data.salary.toFixed(2)}‚Ç¨`;\n        spentEl.textContent = `${totalSpent.toFixed(2)}‚Ç¨`;\n        remainingEl.textContent = `${remaining.toFixed(2)}‚Ç¨`;\n        \n        console.log('‚úÖ R√©sum√© mis √† jour dans le DOM');\n\n        // Changer la couleur selon le restant\n        if (remaining < 0) {\n            remainingEl.classList.remove('text-green-700');\n            remainingEl.classList.add('text-red-700');\n        } else {\n            remainingEl.classList.remove('text-red-700');\n            remainingEl.classList.add('text-green-700');\n        }\n    }\n\n    // Mettre √† jour la liste des cat√©gories\n    updateCategoriesList(): void {\n        const data = this.dataManager.getData();\n        const container = document.getElementById('categories-list');\n        \n        if (!container) {\n            console.warn('‚ö†Ô∏è Container categories-list non trouv√©');\n            return;\n        }\n        \n        container.innerHTML = '';\n\n        Object.entries(data.categories).forEach(([key, category]) => {\n            const percentage = category.budget > 0 ? (category.spent / category.budget) * 100 : 0;\n            const remaining = category.budget - category.spent;\n\n            const categoryCard = document.createElement('div');\n            categoryCard.className = 'category-card bg-white dark:bg-gray-800 p-6 rounded-xl shadow-md hover:shadow-xl transition-all duration-300 border-l-4 cursor-move';\n            categoryCard.style.borderColor = category.color || '#6366f1';\n            categoryCard.dataset.categoryKey = key;\n\n            let progressBarColor = 'bg-blue-500';\n            if (percentage > 100) {\n                progressBarColor = 'bg-red-500';\n            } else if (percentage > 80) {\n                progressBarColor = 'bg-yellow-500';\n            }\n\n            categoryCard.innerHTML = `\n                <div class=\"flex justify-between items-start mb-4\">\n                    <div class=\"flex items-center gap-2\">\n                        <i class=\"fas fa-grip-vertical text-gray-400 cursor-move\" title=\"Glisser pour r√©organiser\"></i>\n                        <div>\n                            <h3 class=\"text-lg font-bold text-gray-800 dark:text-gray-200\">${category.name}</h3>\n                            <p class=\"text-sm text-gray-600 dark:text-gray-400\">Budget: ${category.budget.toFixed(2)}‚Ç¨</p>\n                        </div>\n                    </div>\n                    <div class=\"text-right\">\n                        <p class=\"text-2xl font-bold ${remaining >= 0 ? 'text-green-600' : 'text-red-600'}\">${remaining.toFixed(2)}‚Ç¨</p>\n                        <p class=\"text-xs text-gray-500 dark:text-gray-400\">restant</p>\n                    </div>\n                </div>\n                \n                <div class=\"mb-3\">\n                    <div class=\"flex justify-between text-sm mb-1\">\n                        <span class=\"text-gray-600 dark:text-gray-400\">D√©pens√©: ${category.spent.toFixed(2)}‚Ç¨</span>\n                        <span class=\"font-semibold ${percentage > 100 ? 'text-red-600' : 'text-gray-800 dark:text-gray-200'}\">${percentage.toFixed(1)}%</span>\n                    </div>\n                    <div class=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-3 overflow-hidden\">\n                        <div class=\"${progressBarColor} h-full rounded-full transition-all duration-500\" \n                             style=\"width: ${Math.min(percentage, 100)}%\"></div>\n                    </div>\n                </div>\n                \n                <button class=\"w-full bg-primary hover:bg-primary-dark text-white py-2 px-4 rounded-lg transition-all duration-300 text-sm font-medium view-category-btn\" \n                        data-category=\"${key}\">\n                    Voir les transactions\n                </button>\n            `;\n\n            container.appendChild(categoryCard);\n        });\n\n        // D√©clencher un √©v√©nement pour initialiser le drag & drop\n        window.dispatchEvent(new CustomEvent('categories-rendered', { detail: { container } }));\n\n        // Ajouter les event listeners pour les boutons \"Voir les transactions\"\n        document.querySelectorAll('.view-category-btn').forEach(btn => {\n            btn.addEventListener('click', (e) => {\n                const category = (e.target as HTMLElement).dataset.category;\n                if ((window as any).budgetManager && (window as any).budgetManager.openTransactionsModal) {\n                    (window as any).budgetManager.openTransactionsModal(category);\n                }\n            });\n        });\n    }\n\n    // Mettre √† jour le formulaire de d√©pense\n    updateExpenseForm(): void {\n        const data = this.dataManager.getData();\n        const select = document.getElementById('expense-category') as HTMLSelectElement;\n        select.innerHTML = '<option value=\"\">Choisir une cat√©gorie</option>';\n\n        Object.entries(data.categories).forEach(([key, category]) => {\n            const option = document.createElement('option');\n            option.value = key;\n            option.textContent = category.name;\n            select.appendChild(option);\n        });\n    }\n\n    // Mettre √† jour les transactions r√©centes\n    updateRecentTransactions(transactions: Transaction[]): void {\n        const container = document.getElementById('recent-transactions')!;\n        const recentTransactions = transactions.slice(-3).reverse();\n\n        if (recentTransactions.length === 0) {\n            container.innerHTML = `\n                <div class=\"text-center text-gray-500 dark:text-gray-400 py-8\">\n                    <i class=\"fas fa-receipt text-4xl mb-4\"></i>\n                    <p>Aucune transaction r√©cente</p>\n                </div>\n            `;\n            return;\n        }\n\n        const data = this.dataManager.getData();\n        container.innerHTML = recentTransactions\n            .filter(transaction => data.categories[transaction.category]) // Filtrer les cat√©gories supprim√©es\n            .map(transaction => {\n                const date = new Date(transaction.date);\n                const category = data.categories[transaction.category];\n                \n                return `\n                <div class=\"flex justify-between items-center p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-600 transition-colors\">\n                    <div class=\"flex-1\">\n                        <p class=\"font-semibold text-gray-800 dark:text-gray-200\">${transaction.description || 'Sans description'}</p>\n                        <p class=\"text-sm text-gray-600 dark:text-gray-400\">${category?.name || transaction.category} ‚Ä¢ ${date.toLocaleDateString('fr-FR')}</p>\n                    </div>\n                    <div class=\"flex items-center gap-2\">\n                        <p class=\"font-bold text-red-600 text-lg\">-${transaction.amount.toFixed(2)}‚Ç¨</p>\n                        <div class=\"flex gap-1\">\n                            <button class=\"edit-transaction-btn text-blue-600 hover:text-blue-800 text-sm p-2 rounded transition-colors\" data-transaction-id=\"${transaction.id}\" title=\"Modifier\">\n                                <i class=\"fas fa-edit\"></i>\n                            </button>\n                            <button class=\"delete-transaction-btn text-red-600 hover:text-red-800 text-sm p-2 rounded transition-colors\" data-transaction-id=\"${transaction.id}\" title=\"Supprimer\">\n                                <i class=\"fas fa-trash\"></i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            `;\n        }).join('');\n    }\n\n    // Ouvrir le modal d'√©dition des budgets\n    openEditBudgetModal(): void {\n        const data = this.dataManager.getData();\n        (document.getElementById('edit-salary') as HTMLInputElement).value = data.salary.toString();\n        document.getElementById('edit-budget-modal')!.classList.remove('hidden');\n    }\n\n    // Fermer un modal\n    closeModal(modalId: string): void {\n        document.getElementById(modalId)!.classList.add('hidden');\n    }\n\n    // Mettre √† jour les couleurs des boutons de filtre\n    updateButtonColors(activeCategory: string): void {\n        // R√©initialiser tous les boutons\n        document.querySelectorAll('.filter-btn').forEach(btn => {\n            btn.classList.remove('active', 'bg-primary', 'text-white', 'shadow-lg', 'scale-105', 'ring-2', 'ring-primary', 'ring-opacity-50');\n            btn.classList.add('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300');\n        });\n        \n        // Activer le bouton s√©lectionn√©\n        const activeBtn = document.querySelector(`[data-category=\"${activeCategory}\"]`);\n        if (activeBtn) {\n            activeBtn.classList.remove('bg-gray-200', 'text-gray-700', 'hover:bg-gray-300');\n            activeBtn.classList.add('active', 'bg-primary', 'text-white', 'shadow-lg', 'scale-105', 'ring-2', 'ring-primary', 'ring-opacity-50');\n        }\n    }\n\n    // Mettre √† jour le total allou√© dans le setup\n    updateTotalAmount(salary: number, totalAllocated: number): void {\n        const remaining = salary - totalAllocated;\n        \n        const totalElement = document.getElementById('total-allocated');\n        const remainingElement = document.getElementById('remaining-budget');\n        \n        if (totalElement) totalElement.textContent = totalAllocated.toFixed(2);\n        if (remainingElement) {\n            remainingElement.textContent = remaining.toFixed(2);\n            \n            const parentElement = remainingElement.parentElement;\n            if (parentElement) {\n                parentElement.classList.remove('positive', 'negative');\n                \n                if (remaining > 0) {\n                    parentElement.classList.add('positive');\n                } else if (remaining < 0) {\n                    parentElement.classList.add('negative');\n                }\n            }\n        }\n    }\n\n    // Mettre √† jour les totaux dans le modal d'√©dition\n    updateEditTotals(salary: number, totalAllocated: number): void {\n        const remaining = salary - totalAllocated;\n        \n        document.getElementById('edit-total-allocated')!.textContent = totalAllocated.toFixed(2);\n        document.getElementById('edit-remaining-budget')!.textContent = remaining.toFixed(2);\n        \n        const remainingElement = document.querySelector('.edit-remaining-budget');\n        if (remainingElement) {\n            remainingElement.classList.remove('text-green-500', 'text-red-500', 'text-primary');\n            \n            if (remaining > 0) {\n                remainingElement.classList.add('text-green-500');\n            } else if (remaining < 0) {\n                remainingElement.classList.add('text-red-500');\n            } else {\n                remainingElement.classList.add('text-primary');\n            }\n        }\n    }\n}\n","import { Chart, registerables } from 'chart.js';\nimport type { EvolutionData } from '@/types';\nimport type { DataManager } from './DataManager';\nimport type { ThemeManager } from './ThemeManager';\n\n// Enregistrer tous les composants Chart.js\nChart.register(...registerables);\n\n// Gestionnaire de graphiques (Chart.js)\nexport class ChartManager {\n    private chart: any = null;\n    private evolutionChart: any = null;\n\n    constructor(\n        private dataManager: DataManager,\n        private themeManager: ThemeManager\n    ) {}\n\n    // Mettre √† jour le graphique principal (doughnut)\n    updateChart(): void {\n        const ctx = document.getElementById('budget-chart') as HTMLCanvasElement;\n        if (!ctx) return;\n        \n        const context = ctx.getContext('2d');\n        if (!context) return;\n        \n        if (this.chart) {\n            this.chart.destroy();\n        }\n\n        const data = this.dataManager.getData();\n        const labels = Object.values(data.categories).map(cat => cat.name);\n        const budgetData = Object.values(data.categories).map(cat => cat.budget);\n        const spentData = Object.values(data.categories).map(cat => cat.spent);\n\n        this.chart = new Chart(context, {\n            type: 'doughnut',\n            data: {\n                labels: labels,\n                datasets: [{\n                    label: 'Budget',\n                    data: budgetData,\n                    backgroundColor: [\n                        '#6366f1',\n                        '#06b6d4',\n                        '#10b981',\n                        '#f59e0b',\n                        '#ef4444',\n                        '#8b5cf6',\n                        '#ec4899'\n                    ],\n                    borderWidth: 2,\n                    borderColor: '#ffffff'\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    legend: {\n                        position: 'bottom',\n                        labels: {\n                            padding: 20,\n                            usePointStyle: true\n                        }\n                    },\n                    tooltip: {\n                        callbacks: {\n                            label: function(context: any) {\n                                const category = context.label;\n                                const budget = context.parsed;\n                                const spent = spentData[context.dataIndex];\n                                return `${category}: ${budget.toFixed(2)}‚Ç¨ (d√©pens√©: ${spent.toFixed(2)}‚Ç¨)`;\n                            }\n                        }\n                    }\n                }\n            }\n        });\n        \n        // Mettre √† jour le graphique d'√©volution\n        this.updateEvolutionChart();\n    }\n\n    // Mettre √† jour le graphique d'√©volution (line chart)\n    updateEvolutionChart(): void {\n        const ctx = document.getElementById('evolution-chart') as HTMLCanvasElement;\n        if (!ctx) return;\n        \n        const context = ctx.getContext('2d');\n        if (!context) return;\n        \n        if (this.evolutionChart) {\n            this.evolutionChart.destroy();\n        }\n\n        // Pr√©parer les donn√©es d'√©volution (derniers 6 mois)\n        const evolutionData = this.getEvolutionData();\n        \n        const isDark = this.themeManager.isDarkMode();\n        const textColor = isDark ? '#e5e7eb' : '#374151';\n        const gridColor = isDark ? '#374151' : '#e5e7eb';\n\n        this.evolutionChart = new Chart(context, {\n            type: 'line',\n            data: {\n                labels: evolutionData.labels,\n                datasets: [{\n                    label: 'D√©penses totales',\n                    data: evolutionData.expenses,\n                    borderColor: '#6366f1',\n                    backgroundColor: 'rgba(99, 102, 241, 0.1)',\n                    borderWidth: 3,\n                    fill: true,\n                    tension: 0.4,\n                    pointBackgroundColor: '#6366f1',\n                    pointBorderColor: '#ffffff',\n                    pointBorderWidth: 2,\n                    pointRadius: 6,\n                    pointHoverRadius: 8\n                }, {\n                    label: 'Budget total',\n                    data: evolutionData.budgets,\n                    borderColor: '#10b981',\n                    backgroundColor: 'rgba(16, 185, 129, 0.1)',\n                    borderWidth: 2,\n                    borderDash: [5, 5],\n                    fill: false,\n                    tension: 0.4,\n                    pointBackgroundColor: '#10b981',\n                    pointBorderColor: '#ffffff',\n                    pointBorderWidth: 2,\n                    pointRadius: 4,\n                    pointHoverRadius: 6\n                }]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                interaction: {\n                    intersect: false,\n                    mode: 'index'\n                },\n                plugins: {\n                    legend: {\n                        position: 'top',\n                        labels: {\n                            color: textColor,\n                            padding: 20,\n                            usePointStyle: true\n                        }\n                    },\n                    tooltip: {\n                        backgroundColor: isDark ? '#1f2937' : '#ffffff',\n                        titleColor: textColor,\n                        bodyColor: textColor,\n                        borderColor: isDark ? '#374151' : '#e5e7eb',\n                        borderWidth: 1,\n                        callbacks: {\n                            label: function(context: any) {\n                                return `${context.dataset.label}: ${context.parsed.y.toFixed(2)}‚Ç¨`;\n                            }\n                        }\n                    }\n                },\n                scales: {\n                    x: {\n                        grid: {\n                            color: gridColor,\n                            display: true\n                        },\n                        border: {\n                            display: false\n                        },\n                        ticks: {\n                            color: textColor\n                        }\n                    },\n                    y: {\n                        beginAtZero: true,\n                        grid: {\n                            color: gridColor,\n                            display: true\n                        },\n                        border: {\n                            display: false\n                        },\n                        ticks: {\n                            color: textColor,\n                            callback: function(value: any) {\n                                return value.toFixed(0) + '‚Ç¨';\n                            }\n                        }\n                    }\n                }\n            }\n        });\n    }\n\n    // Obtenir les donn√©es d'√©volution sur 6 mois\n    getEvolutionData(): EvolutionData {\n        const data = this.dataManager.getData();\n        const months: string[] = [];\n        const expenses: number[] = [];\n        const budgets: number[] = [];\n        \n        const currentDate = new Date();\n        \n        console.log('üîç Debug Evolution Chart:');\n        console.log('Date actuelle:', currentDate.toISOString());\n        console.log('Transactions disponibles:', data.transactions.length);\n        \n        for (let i = 5; i >= 0; i--) {\n            const date = new Date(currentDate.getFullYear(), currentDate.getMonth() - i, 1);\n            const monthKey = date.toISOString().slice(0, 7);\n            const monthName = date.toLocaleDateString('fr-FR', { month: 'short', year: '2-digit' });\n            \n            months.push(monthName);\n            \n            // Calculer les d√©penses pour ce mois\n            const monthTransactions = data.transactions.filter(t => {\n                try {\n                    const transactionDate = t.date;\n                    \n                    // M√©thode 1: V√©rifier si la date commence par le monthKey\n                    if (transactionDate.startsWith(monthKey)) {\n                        return true;\n                    }\n                    \n                    // M√©thode 2: Convertir la date en objet Date et comparer\n                    const tDate = new Date(transactionDate);\n                    const tYear = tDate.getFullYear();\n                    const tMonth = tDate.getMonth() + 1;\n                    const tMonthKey = `${tYear}-${tMonth.toString().padStart(2, '0')}`;\n                    \n                    if (tMonthKey === monthKey) {\n                        return true;\n                    }\n                    \n                    // M√©thode 3: Pour les dates au format DD/MM/YYYY\n                    if (transactionDate.includes('/')) {\n                        const parts = transactionDate.split('/');\n                        if (parts.length === 3) {\n                            const year = parts[2];\n                            const month = parts[1].padStart(2, '0');\n                            const dateKey = `${year}-${month}`;\n                            if (dateKey === monthKey) {\n                                return true;\n                            }\n                        }\n                    }\n                    \n                    return false;\n                } catch (error) {\n                    console.warn('Erreur parsing date:', t.date, error);\n                    return false;\n                }\n            });\n            \n            const monthExpenses = monthTransactions.reduce((sum, t) => sum + t.amount, 0);\n            expenses.push(monthExpenses);\n            \n            // Budget total\n            const totalBudget = Object.values(data.categories).reduce((sum, cat) => sum + cat.budget, 0);\n            budgets.push(totalBudget);\n        }\n        \n        return {\n            labels: months,\n            expenses: expenses,\n            budgets: budgets\n        };\n    }\n\n    // D√©truire les graphiques\n    destroy(): void {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = null;\n        }\n        if (this.evolutionChart) {\n            this.evolutionChart.destroy();\n            this.evolutionChart = null;\n        }\n    }\n}\n","import type { Transaction, CategoryStats, GlobalStats } from '@/types';\nimport type { DataManager } from './DataManager';\n\n// Gestionnaire de transactions\nexport class TransactionManager {\n    constructor(private dataManager: DataManager) {}\n\n    // Ajouter une d√©pense\n    addExpense(category: string, amount: number, description: string): Transaction {\n        if (!category || !amount || amount <= 0) {\n            throw new Error('Veuillez remplir tous les champs obligatoires');\n        }\n\n        const data = this.dataManager.getData();\n        const transaction: Transaction = {\n            id: Date.now().toString(),\n            category: category,\n            amount: amount,\n            description: description,\n            date: new Date().toISOString()\n        };\n\n        data.transactions.push(transaction);\n        data.categories[category].spent += amount;\n\n        return transaction;\n    }\n\n    // Obtenir le total d√©pens√©\n    getTotalSpent(): number {\n        const data = this.dataManager.getData();\n        return Object.values(data.categories).reduce((total, category) => total + category.spent, 0);\n    }\n\n    // Filtrer les transactions\n    filterTransactions(categoryFilter: string, searchTerm: string = ''): Transaction[] {\n        const data = this.dataManager.getData();\n        let filteredTransactions = data.transactions;\n        \n        // Filtre par cat√©gorie\n        if (categoryFilter !== 'all') {\n            filteredTransactions = filteredTransactions.filter(t => t.category === categoryFilter);\n        }\n        \n        // Filtre par recherche textuelle\n        if (searchTerm.trim() !== '') {\n            const searchLower = searchTerm.toLowerCase();\n            filteredTransactions = filteredTransactions.filter(t => \n                t.description.toLowerCase().includes(searchLower) ||\n                t.amount.toString().includes(searchTerm) ||\n                (data.categories[t.category]?.name || '').toLowerCase().includes(searchLower) ||\n                new Date(t.date).toLocaleDateString('fr-FR').includes(searchTerm)\n            );\n        }\n        \n        return filteredTransactions;\n    }\n\n    // Modifier une transaction\n    editTransaction(\n        transactionId: string, \n        newCategory: string, \n        newAmount: number, \n        newDescription: string\n    ): { transaction: Transaction; oldCategory: string; newCategory: string } {\n        const data = this.dataManager.getData();\n        const transaction = data.transactions.find(t => t.id === transactionId);\n        \n        if (!transaction) {\n            throw new Error('Transaction introuvable');\n        }\n\n        if (!newCategory || !newAmount || newAmount <= 0) {\n            throw new Error('Veuillez remplir tous les champs obligatoires');\n        }\n\n        // Mettre √† jour la transaction\n        const oldCategory = transaction.category;\n        const oldAmount = transaction.amount;\n\n        transaction.category = newCategory;\n        transaction.amount = newAmount;\n        transaction.description = newDescription;\n\n        // Mettre √† jour les totaux des cat√©gories\n        if (oldCategory !== newCategory) {\n            data.categories[oldCategory].spent -= oldAmount;\n            data.categories[newCategory].spent += newAmount;\n        } else {\n            data.categories[newCategory].spent = data.categories[newCategory].spent - oldAmount + newAmount;\n        }\n\n        return { transaction, oldCategory, newCategory };\n    }\n\n    // Supprimer une transaction\n    deleteTransaction(transactionId: string): Transaction {\n        const data = this.dataManager.getData();\n        const transaction = data.transactions.find(t => t.id === transactionId);\n        \n        if (!transaction) {\n            throw new Error('Transaction introuvable');\n        }\n\n        // Retirer le montant de la cat√©gorie\n        data.categories[transaction.category].spent -= transaction.amount;\n\n        // Supprimer la transaction\n        data.transactions = data.transactions.filter(t => t.id !== transactionId);\n\n        return transaction;\n    }\n\n    // Obtenir une transaction par ID\n    getTransactionById(transactionId: string): Transaction | undefined {\n        const data = this.dataManager.getData();\n        return data.transactions.find(t => t.id === transactionId);\n    }\n\n    // Obtenir les transactions r√©centes\n    getRecentTransactions(limit: number = 3): Transaction[] {\n        const data = this.dataManager.getData();\n        return data.transactions.slice(-limit).reverse();\n    }\n\n    // Obtenir les top d√©penses\n    getTopExpenses(limit: number = 5): Transaction[] {\n        const data = this.dataManager.getData();\n        return [...data.transactions]\n            .sort((a, b) => b.amount - a.amount)\n            .slice(0, limit);\n    }\n\n    // Obtenir les statistiques de cat√©gorie\n    getCategoryStats(categoryKey: string): CategoryStats | null {\n        const data = this.dataManager.getData();\n        const category = data.categories[categoryKey];\n        \n        if (!category) return null;\n\n        const categoryPercentage = category.budget > 0 ? (category.spent / category.budget) * 100 : 0;\n        const remaining = category.budget - category.spent;\n\n        return {\n            budget: category.budget,\n            spent: category.spent,\n            remaining: remaining,\n            percentage: categoryPercentage\n        };\n    }\n\n    // Obtenir les statistiques globales\n    getGlobalStats(): GlobalStats {\n        const data = this.dataManager.getData();\n        const totalBudget = Object.values(data.categories).reduce((sum, cat) => sum + cat.budget, 0);\n        const totalSpent = Object.values(data.categories).reduce((sum, cat) => sum + cat.spent, 0);\n        const totalRemaining = totalBudget - totalSpent;\n        const globalPercentage = totalBudget > 0 ? (totalSpent / totalBudget) * 100 : 0;\n\n        return {\n            budget: totalBudget,\n            spent: totalSpent,\n            remaining: totalRemaining,\n            percentage: globalPercentage\n        };\n    }\n}\n","import type { Category } from '@/types';\nimport type { DataManager } from './DataManager';\n\n// Gestionnaire de cat√©gories\nexport class CategoryManager {\n    constructor(private dataManager: DataManager) {}\n\n    // Obtenir le nom d'affichage d'une cat√©gorie\n    getCategoryDisplayName(key: string): string {\n        const names: Record<string, string> = {\n            'courses': 'Courses',\n            'loisirs': 'Loisirs',\n            'transport': 'Transport',\n            'logement': 'Logement',\n            'sante': 'Sant√©',\n            'autres': 'Autres'\n        };\n        return names[key] || key;\n    }\n\n    // Ajouter une nouvelle cat√©gorie\n    addCategory(name: string, budget: number, color: string = '#6366f1'): { key: string; category: Category } {\n        const data = this.dataManager.getData();\n\n        if (!name || !budget || budget < 0) {\n            throw new Error('Veuillez remplir tous les champs');\n        }\n\n        // Cr√©er une cl√© unique √† partir du nom\n        const key = name.toLowerCase().replace(/[^a-z0-9]/g, '_');\n\n        // V√©rifier si la cat√©gorie existe d√©j√†\n        if (data.categories[key]) {\n            throw new Error('Cette cat√©gorie existe d√©j√†');\n        }\n\n        // Cr√©er la nouvelle cat√©gorie\n        data.categories[key] = {\n            name: name,\n            budget: budget,\n            spent: 0,\n            color: color\n        };\n\n        return { key, category: data.categories[key] };\n    }\n\n    // Supprimer une cat√©gorie\n    deleteCategory(categoryKey: string): { category: Category; transactionsCount: number } {\n        const data = this.dataManager.getData();\n        const category = data.categories[categoryKey];\n        \n        if (!category) {\n            throw new Error('Cat√©gorie introuvable');\n        }\n\n        // V√©rifier s'il y a des transactions dans cette cat√©gorie\n        const transactionsInCategory = data.transactions.filter(t => t.category === categoryKey);\n\n        // Supprimer la cat√©gorie\n        delete data.categories[categoryKey];\n\n        // Supprimer les transactions associ√©es\n        data.transactions = data.transactions.filter(t => t.category !== categoryKey);\n\n        // Supprimer les transactions r√©currentes associ√©es\n        if (data.recurringTransactions) {\n            data.recurringTransactions = data.recurringTransactions.filter(r => r.category !== categoryKey);\n        }\n\n        return { category, transactionsCount: transactionsInCategory.length };\n    }\n\n    // Mettre √† jour le budget d'une cat√©gorie\n    updateCategoryBudget(categoryKey: string, newBudget: number): { oldBudget: number; newBudget: number } {\n        const data = this.dataManager.getData();\n        \n        if (!data.categories[categoryKey]) {\n            throw new Error('Cat√©gorie introuvable');\n        }\n\n        if (newBudget < 0) {\n            throw new Error('Le budget doit √™tre positif');\n        }\n\n        const oldBudget = data.categories[categoryKey].budget;\n        data.categories[categoryKey].budget = newBudget;\n\n        // Recalculer le pourcentage si le salaire existe\n        if (data.salary > 0) {\n            data.categories[categoryKey].percentage = (newBudget / data.salary) * 100;\n        }\n\n        return { oldBudget, newBudget };\n    }\n\n    // Obtenir toutes les cat√©gories\n    getAllCategories(): Record<string, Category> {\n        const data = this.dataManager.getData();\n        return data.categories;\n    }\n\n    // Obtenir une cat√©gorie par cl√©\n    getCategory(categoryKey: string): Category | undefined {\n        const data = this.dataManager.getData();\n        return data.categories[categoryKey];\n    }\n\n    // Calculer le budget restant √† allouer\n    getRemainingBudgetToAllocate(excludeCategory: string | null = null): number {\n        const data = this.dataManager.getData();\n        const salary = data.salary || 0;\n        \n        let totalAllocated = 0;\n        Object.entries(data.categories).forEach(([key, category]) => {\n            if (key !== excludeCategory) {\n                totalAllocated += category.budget || 0;\n            }\n        });\n        \n        return salary - totalAllocated;\n    }\n\n    // Allouer le budget restant √† une cat√©gorie\n    allocateRemainingBudget(categoryKey: string): number {\n        const data = this.dataManager.getData();\n        \n        if (data.salary === 0) {\n            throw new Error('Veuillez d\\'abord saisir votre salaire mensuel');\n        }\n\n        const remaining = this.getRemainingBudgetToAllocate(categoryKey);\n        \n        if (remaining < 0) {\n            throw new Error('Le budget total d√©passe d√©j√† le salaire. R√©duisez d\\'abord les autres cat√©gories.');\n        }\n\n        if (!data.categories[categoryKey]) {\n            throw new Error('Cat√©gorie introuvable');\n        }\n\n        data.categories[categoryKey].budget = remaining;\n        \n        return remaining;\n    }\n\n    // V√©rifier si le budget total d√©passe le salaire\n    isBudgetExceeded(): boolean {\n        const data = this.dataManager.getData();\n        const totalBudget = Object.values(data.categories).reduce((sum, cat) => sum + (cat.budget || 0), 0);\n        return totalBudget > data.salary;\n    }\n\n    // Obtenir le total des budgets allou√©s\n    getTotalBudget(): number {\n        const data = this.dataManager.getData();\n        return Object.values(data.categories).reduce((sum, cat) => sum + (cat.budget || 0), 0);\n    }\n}\n","import type { SavingsGoal, GoalProgress } from '@/types';\nimport type { DataManager } from './DataManager';\n\n// Gestionnaire d'objectifs d'√©pargne\nexport class SavingsManager {\n    constructor(private dataManager: DataManager) {}\n\n    // Ajouter un objectif d'√©pargne\n    addSavingsGoal(name: string, target: number, deadline: string, current: number = 0): SavingsGoal {\n        if (!name || !target || !deadline) {\n            throw new Error('Veuillez remplir tous les champs obligatoires');\n        }\n\n        const data = this.dataManager.getData();\n        const goal: SavingsGoal = {\n            id: Date.now().toString(),\n            name: name,\n            target: target,\n            current: current,\n            deadline: deadline,\n            createdAt: new Date().toISOString(),\n            completed: false\n        };\n\n        data.savingsGoals.push(goal);\n        return goal;\n    }\n\n    // Ajouter un montant √† un objectif\n    addToGoal(goalId: string, amount: number): { goal: SavingsGoal; justCompleted: boolean } {\n        if (!amount || isNaN(amount) || parseFloat(amount.toString()) <= 0) {\n            throw new Error('Montant invalide');\n        }\n\n        const data = this.dataManager.getData();\n        const goal = data.savingsGoals.find(g => g.id === goalId);\n        \n        if (!goal) {\n            throw new Error('Objectif introuvable');\n        }\n\n        goal.current += parseFloat(amount.toString());\n        \n        const wasCompleted = goal.completed;\n        if (goal.current >= goal.target && !goal.completed) {\n            goal.completed = true;\n        }\n\n        return { goal, justCompleted: !wasCompleted && goal.completed };\n    }\n\n    // Modifier le montant d'un objectif\n    editGoal(goalId: string, newAmount: number | string): { goal: SavingsGoal; justCompleted: boolean } {\n        if (newAmount === null || isNaN(Number(newAmount)) || parseFloat(newAmount.toString()) < 0) {\n            throw new Error('Montant invalide');\n        }\n\n        const data = this.dataManager.getData();\n        const goal = data.savingsGoals.find(g => g.id === goalId);\n        \n        if (!goal) {\n            throw new Error('Objectif introuvable');\n        }\n\n        goal.current = parseFloat(newAmount.toString());\n        \n        const wasCompleted = goal.completed;\n        if (goal.current >= goal.target && !goal.completed) {\n            goal.completed = true;\n        }\n\n        return { goal, justCompleted: !wasCompleted && goal.completed };\n    }\n\n    // Supprimer un objectif\n    deleteSavingsGoal(goalId: string): SavingsGoal {\n        const data = this.dataManager.getData();\n        const goal = data.savingsGoals.find(g => g.id === goalId);\n        \n        if (!goal) {\n            throw new Error('Objectif introuvable');\n        }\n\n        data.savingsGoals = data.savingsGoals.filter(g => g.id !== goalId);\n        return goal;\n    }\n\n    // Obtenir tous les objectifs\n    getAllGoals(): SavingsGoal[] {\n        const data = this.dataManager.getData();\n        return data.savingsGoals || [];\n    }\n\n    // Obtenir un objectif par ID\n    getGoalById(goalId: string): SavingsGoal | undefined {\n        const data = this.dataManager.getData();\n        return data.savingsGoals.find(g => g.id === goalId);\n    }\n\n    // Calculer la progression d'un objectif\n    getGoalProgress(goalId: string): GoalProgress | null {\n        const goal = this.getGoalById(goalId);\n        if (!goal) return null;\n\n        const progress = (goal.current / goal.target) * 100;\n        const isCompleted = progress >= 100;\n        const daysLeft = Math.ceil((new Date(goal.deadline).getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\n\n        return {\n            progress: progress,\n            isCompleted: isCompleted,\n            daysLeft: daysLeft,\n            remaining: goal.target - goal.current\n        };\n    }\n}\n","import type { RecurringTransaction } from '@/types';\nimport type { DataManager } from './DataManager';\n\n// Gestionnaire de transactions r√©currentes\nexport class RecurringManager {\n    constructor(private dataManager: DataManager) {}\n\n    // Ajouter une transaction r√©currente\n    addRecurringTransaction(\n        name: string, \n        category: string, \n        amount: number, \n        frequency: 'monthly' | 'weekly' | 'yearly', \n        day: number, \n        active: boolean = true\n    ): RecurringTransaction {\n        if (!name || !category || !amount || amount <= 0) {\n            throw new Error('Veuillez remplir tous les champs obligatoires');\n        }\n\n        const data = this.dataManager.getData();\n        const recurring: RecurringTransaction = {\n            id: Date.now().toString(),\n            name,\n            category,\n            amount,\n            frequency,\n            day,\n            active,\n            lastProcessed: null\n        };\n\n        data.recurringTransactions.push(recurring);\n        return recurring;\n    }\n\n    // Supprimer une transaction r√©currente\n    deleteRecurringTransaction(recurringId: string): RecurringTransaction {\n        const data = this.dataManager.getData();\n        const recurring = data.recurringTransactions.find(r => r.id === recurringId);\n        \n        if (!recurring) {\n            throw new Error('Transaction r√©currente introuvable');\n        }\n\n        data.recurringTransactions = data.recurringTransactions.filter(r => r.id !== recurringId);\n        return recurring;\n    }\n\n    // Basculer l'√©tat actif/inactif\n    toggleRecurringTransaction(recurringId: string): RecurringTransaction {\n        const data = this.dataManager.getData();\n        const recurring = data.recurringTransactions.find(r => r.id === recurringId);\n        \n        if (!recurring) {\n            throw new Error('Transaction r√©currente introuvable');\n        }\n\n        recurring.active = !recurring.active;\n        return recurring;\n    }\n\n    // Traiter les transactions r√©currentes\n    processRecurringTransactions(): number {\n        const data = this.dataManager.getData();\n        const today = new Date();\n        const currentDay = today.getDate();\n        const currentMonth = today.toISOString().slice(0, 7);\n        \n        let processedCount = 0;\n\n        data.recurringTransactions.forEach(recurring => {\n            if (!recurring.active) return;\n\n            // V√©rifier si d√©j√† trait√© ce mois\n            if (recurring.lastProcessed && recurring.lastProcessed.startsWith(currentMonth)) {\n                return;\n            }\n\n            // V√©rifier si c'est le bon jour\n            let shouldProcess = false;\n            \n            if (recurring.frequency === 'monthly' && currentDay >= recurring.day) {\n                shouldProcess = true;\n            } else if (recurring.frequency === 'weekly') {\n                const dayOfWeek = today.getDay();\n                if (dayOfWeek === recurring.day) {\n                    shouldProcess = true;\n                }\n            }\n\n            if (shouldProcess) {\n                // Cr√©er la transaction\n                const transaction = {\n                    id: Date.now().toString() + '_' + Math.random(),\n                    category: recurring.category,\n                    amount: recurring.amount,\n                    description: `${recurring.name} (r√©current)`,\n                    date: today.toISOString()\n                };\n\n                data.transactions.push(transaction);\n                data.categories[recurring.category].spent += recurring.amount;\n                recurring.lastProcessed = today.toISOString();\n                processedCount++;\n            }\n        });\n\n        return processedCount;\n    }\n\n    // Obtenir toutes les transactions r√©currentes\n    getAllRecurringTransactions(): RecurringTransaction[] {\n        const data = this.dataManager.getData();\n        return data.recurringTransactions || [];\n    }\n\n    // Obtenir une transaction r√©currente par ID\n    getRecurringTransactionById(recurringId: string): RecurringTransaction | undefined {\n        const data = this.dataManager.getData();\n        return data.recurringTransactions.find(r => r.id === recurringId);\n    }\n}\n","import jsPDF from 'jspdf';\nimport type { BudgetData } from '@/types';\nimport type { DataManager } from './DataManager';\n\n// Gestionnaire d'export (PDF et donn√©es)\nexport class ExportManager {\n    constructor(private dataManager: DataManager) {}\n\n    // Export en PDF\n    async exportToPDF(): Promise<string> {\n        const pdf = new jsPDF('p', 'mm', 'a4');\n        const data = this.dataManager.getData();\n        \n        const currentDate = new Date().toLocaleDateString('fr-FR');\n        const monthName = new Date().toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' });\n        \n        // En-t√™te\n        pdf.setFontSize(20);\n        pdf.setTextColor(99, 102, 241);\n        pdf.text('Rapport Budg√©taire', 105, 20, { align: 'center' });\n        \n        pdf.setFontSize(12);\n        pdf.setTextColor(100, 100, 100);\n        pdf.text(monthName, 105, 28, { align: 'center' });\n        pdf.text(`G√©n√©r√© le ${currentDate}`, 105, 34, { align: 'center' });\n        \n        // Ligne de s√©paration\n        pdf.setDrawColor(200, 200, 200);\n        pdf.line(20, 38, 190, 38);\n        \n        let yPos = 45;\n        \n        // R√©sum√© financier\n        pdf.setFontSize(14);\n        pdf.setTextColor(0, 0, 0);\n        pdf.text('üí∞ R√©sum√© Financier', 20, yPos);\n        yPos += 8;\n        \n        const totalBudget = Object.values(data.categories).reduce((s, c) => s + (c.budget || 0), 0);\n        const totalSpent = Object.values(data.categories).reduce((s, c) => s + (c.spent || 0), 0);\n        const remaining = totalBudget - totalSpent;\n        \n        pdf.setFontSize(11);\n        pdf.setTextColor(60, 60, 60);\n        pdf.text(`Budget total: ${totalBudget.toFixed(2)}‚Ç¨`, 25, yPos);\n        yPos += 6;\n        pdf.text(`D√©pens√©: ${totalSpent.toFixed(2)}‚Ç¨`, 25, yPos);\n        yPos += 6;\n        pdf.setTextColor(remaining >= 0 ? 34 : 220, remaining >= 0 ? 197 : 94, remaining >= 0 ? 94 : 38);\n        pdf.text(`Restant: ${remaining.toFixed(2)}‚Ç¨`, 25, yPos);\n        yPos += 10;\n        \n        // D√©penses par cat√©gorie\n        pdf.setFontSize(14);\n        pdf.setTextColor(0, 0, 0);\n        pdf.text('üìä D√©penses par Cat√©gorie', 20, yPos);\n        yPos += 8;\n        \n        pdf.setFontSize(10);\n        Object.entries(data.categories).forEach(([, cat]) => {\n            if (yPos > 270) {\n                pdf.addPage();\n                yPos = 20;\n            }\n            \n            const percent = cat.budget > 0 ? (cat.spent / cat.budget * 100) : 0;\n            pdf.setTextColor(60, 60, 60);\n            pdf.text(`${cat.name}:`, 25, yPos);\n            pdf.text(`${cat.spent.toFixed(2)}‚Ç¨ / ${cat.budget.toFixed(2)}‚Ç¨ (${percent.toFixed(1)}%)`, 100, yPos);\n            yPos += 6;\n        });\n        \n        yPos += 5;\n        \n        // Top 5 des d√©penses\n        if (yPos > 240) {\n            pdf.addPage();\n            yPos = 20;\n        }\n        \n        pdf.setFontSize(14);\n        pdf.setTextColor(0, 0, 0);\n        pdf.text('üèÜ Top 5 des D√©penses', 20, yPos);\n        yPos += 8;\n        \n        const currentMonthKey = data.currentMonth || new Date().toISOString().slice(0, 7);\n        const topTransactions = data.transactions\n            .filter(t => t.date.startsWith(currentMonthKey))\n            .sort((a, b) => b.amount - a.amount)\n            .slice(0, 5);\n        \n        pdf.setFontSize(10);\n        topTransactions.forEach((t, index) => {\n            if (yPos > 270) {\n                pdf.addPage();\n                yPos = 20;\n            }\n            \n            const medal = ['ü•á', 'ü•à', 'ü•â', '4Ô∏è‚É£', '5Ô∏è‚É£'][index];\n            const cat = data.categories[t.category];\n            pdf.setTextColor(60, 60, 60);\n            pdf.text(`${medal} ${t.description || 'Sans description'}`, 25, yPos);\n            pdf.text(`${t.amount.toFixed(2)}‚Ç¨`, 150, yPos);\n            pdf.setFontSize(8);\n            pdf.setTextColor(120, 120, 120);\n            pdf.text(`${cat?.name || t.category} - ${new Date(t.date).toLocaleDateString('fr-FR')}`, 25, yPos + 4);\n            pdf.setFontSize(10);\n            yPos += 10;\n        });\n        \n        // Pied de page\n        const pageCount = (pdf as any).internal.getNumberOfPages();\n        for (let i = 1; i <= pageCount; i++) {\n            pdf.setPage(i);\n            pdf.setFontSize(8);\n            pdf.setTextColor(150, 150, 150);\n            pdf.text(`Page ${i} sur ${pageCount}`, 105, 290, { align: 'center' });\n            pdf.text('G√©n√©r√© par Budget Manager', 105, 295, { align: 'center' });\n        }\n        \n        // T√©l√©charger\n        const filename = `budget-${monthName.replace(/\\s+/g, '-')}-${currentDate.replace(/\\//g, '-')}.pdf`;\n        pdf.save(filename);\n        \n        return filename;\n    }\n\n    // Export des donn√©es JSON\n    exportData(): void {\n        const data = this.dataManager.getData();\n        const dataStr = JSON.stringify(data, null, 2);\n        const dataBlob = new Blob([dataStr], { type: 'application/json' });\n        const url = URL.createObjectURL(dataBlob);\n        const link = document.createElement('a');\n        link.href = url;\n        link.download = `budget-backup-${new Date().toISOString().slice(0, 10)}.json`;\n        link.click();\n        URL.revokeObjectURL(url);\n    }\n\n    // Import des donn√©es JSON\n    async importData(file: File): Promise<BudgetData> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                try {\n                    const imported = JSON.parse(e.target?.result as string);\n                    resolve(imported);\n                } catch (error) {\n                    reject(new Error('Fichier JSON invalide'));\n                }\n            };\n            reader.onerror = () => reject(new Error('Erreur de lecture du fichier'));\n            reader.readAsText(file);\n        });\n    }\n}\n","import type { DataManager } from './DataManager';\n\n// Gestionnaire de Drag & Drop pour r√©organiser les cat√©gories\nexport class DragDropManager {\n    private draggedElement: HTMLElement | null = null;\n    private draggedKey: string | null = null;\n\n    constructor(private dataManager: DataManager) {}\n\n    // Initialiser le drag & drop sur un container\n    initializeDragDrop(container: HTMLElement): void {\n        const items = container.querySelectorAll('.category-card');\n        \n        items.forEach((item) => {\n            const element = item as HTMLElement;\n            element.draggable = true;\n            \n            element.addEventListener('dragstart', (e) => this.handleDragStart(e));\n            element.addEventListener('dragend', (e) => this.handleDragEnd(e));\n            element.addEventListener('dragover', (e) => this.handleDragOver(e));\n            element.addEventListener('drop', (e) => this.handleDrop(e));\n            element.addEventListener('dragenter', (e) => this.handleDragEnter(e));\n            element.addEventListener('dragleave', (e) => this.handleDragLeave(e));\n        });\n    }\n\n    private handleDragStart(e: Event): void {\n        const dragEvent = e as DragEvent;\n        this.draggedElement = dragEvent.target as HTMLElement;\n        this.draggedKey = this.draggedElement.dataset.categoryKey || null;\n        \n        this.draggedElement.classList.add('opacity-50');\n        \n        if (dragEvent.dataTransfer) {\n            dragEvent.dataTransfer.effectAllowed = 'move';\n            dragEvent.dataTransfer.setData('text/html', this.draggedElement.innerHTML);\n        }\n    }\n\n    private handleDragEnd(e: Event): void {\n        const dragEvent = e as DragEvent;\n        const element = dragEvent.target as HTMLElement;\n        element.classList.remove('opacity-50');\n        \n        // Retirer les indicateurs visuels de tous les √©l√©ments\n        const items = document.querySelectorAll('.category-card');\n        items.forEach((item) => {\n            item.classList.remove('border-primary', 'border-4');\n        });\n    }\n\n    private handleDragOver(e: Event): void {\n        e.preventDefault();\n        const dragEvent = e as DragEvent;\n        \n        if (dragEvent.dataTransfer) {\n            dragEvent.dataTransfer.dropEffect = 'move';\n        }\n        \n        return;\n    }\n\n    private handleDragEnter(e: Event): void {\n        const dragEvent = e as DragEvent;\n        const element = dragEvent.target as HTMLElement;\n        const card = element.closest('.category-card') as HTMLElement;\n        \n        if (card && card !== this.draggedElement) {\n            card.classList.add('border-primary', 'border-4');\n        }\n    }\n\n    private handleDragLeave(e: Event): void {\n        const dragEvent = e as DragEvent;\n        const element = dragEvent.target as HTMLElement;\n        const card = element.closest('.category-card') as HTMLElement;\n        \n        if (card) {\n            card.classList.remove('border-primary', 'border-4');\n        }\n    }\n\n    private handleDrop(e: Event): void {\n        e.stopPropagation();\n        e.preventDefault();\n        \n        const dragEvent = e as DragEvent;\n        const dropTarget = (dragEvent.target as HTMLElement).closest('.category-card') as HTMLElement;\n        \n        if (!dropTarget || !this.draggedElement || dropTarget === this.draggedElement) {\n            return;\n        }\n\n        const dropKey = dropTarget.dataset.categoryKey;\n        \n        if (!this.draggedKey || !dropKey) {\n            return;\n        }\n\n        // R√©organiser les cat√©gories\n        this.reorderCategories(this.draggedKey, dropKey);\n        \n        dropTarget.classList.remove('border-primary', 'border-4');\n    }\n\n    private reorderCategories(draggedKey: string, dropKey: string): void {\n        const data = this.dataManager.getData();\n        const categories = data.categories;\n        \n        // Obtenir l'ordre actuel\n        const keys = Object.keys(categories);\n        const draggedIndex = keys.indexOf(draggedKey);\n        const dropIndex = keys.indexOf(dropKey);\n        \n        if (draggedIndex === -1 || dropIndex === -1) {\n            return;\n        }\n\n        // R√©organiser les cl√©s\n        keys.splice(draggedIndex, 1);\n        keys.splice(dropIndex, 0, draggedKey);\n        \n        // Cr√©er un nouveau objet avec le bon ordre\n        const reorderedCategories: Record<string, any> = {};\n        keys.forEach((key, index) => {\n            reorderedCategories[key] = {\n                ...categories[key],\n                order: index\n            };\n        });\n        \n        // Mettre √† jour les donn√©es\n        data.categories = reorderedCategories;\n        this.dataManager.setData(data);\n        this.dataManager.saveData();\n        \n        console.log('‚úÖ Cat√©gories r√©organis√©es');\n        \n        // D√©clencher un √©v√©nement personnalis√© pour rafra√Æchir l'UI\n        window.dispatchEvent(new CustomEvent('categories-reordered'));\n    }\n\n    // Obtenir les cat√©gories tri√©es par ordre\n    getSortedCategories(): [string, any][] {\n        const data = this.dataManager.getData();\n        const entries = Object.entries(data.categories);\n        \n        return entries.sort((a, b) => {\n            const orderA = a[1].order ?? 999;\n            const orderB = b[1].order ?? 999;\n            return orderA - orderB;\n        });\n    }\n}\n","import type { DataManager } from './DataManager';\r\n\r\n// Configuration des widgets\r\nexport interface WidgetConfig {\r\n    id: string;\r\n    name: string;\r\n    visible: boolean;\r\n    order: number;\r\n    size: 'small' | 'medium' | 'large' | 'full';\r\n    collapsed?: boolean;\r\n}\r\n\r\nexport interface DashboardLayout {\r\n    widgets: WidgetConfig[];\r\n}\r\n\r\n// Gestionnaire de widgets du dashboard\r\nexport class WidgetManager {\r\n    private editMode: boolean = false;\r\n    private defaultWidgets: WidgetConfig[] = [\r\n        { id: 'summary', name: 'R√©sum√© du mois', visible: true, order: 0, size: 'full' },\r\n        { id: 'transactions', name: 'Derni√®res transactions', visible: true, order: 1, size: 'full' },\r\n        { id: 'chart', name: 'R√©partition Budget', visible: true, order: 2, size: 'medium' },\r\n        { id: 'comparison', name: 'Comparaison Mensuelle', visible: true, order: 3, size: 'medium' },\r\n        { id: 'predictions', name: 'Pr√©dictions', visible: true, order: 4, size: 'medium' },\r\n        { id: 'top-expenses', name: 'Top 5 D√©penses', visible: true, order: 5, size: 'medium' },\r\n        { id: 'stats', name: 'Statistiques Avanc√©es', visible: true, order: 6, size: 'medium' },\r\n        { id: 'recurring', name: 'Transactions R√©currentes', visible: true, order: 7, size: 'medium' },\r\n        { id: 'quick-expense', name: 'Ajout Rapide', visible: true, order: 8, size: 'medium' },\r\n        { id: 'categories', name: 'Mes Cat√©gories', visible: true, order: 9, size: 'full' },\r\n        { id: 'calendar-widget', name: 'Calendrier', visible: true, order: 10, size: 'full' },\r\n    ];\r\n\r\n    constructor(_dataManager: DataManager) {\r\n        this.loadLayout();\r\n    }\r\n\r\n    // Charger la configuration\r\n    private loadLayout(): void {\r\n        const saved = localStorage.getItem('dashboard-layout');\r\n        if (saved) {\r\n            try {\r\n                const layout: DashboardLayout = JSON.parse(saved);\r\n                this.defaultWidgets = layout.widgets;\r\n                \r\n                // V√©rifier si calendar-widget existe, sinon l'ajouter\r\n                const hasCalendar = this.defaultWidgets.find(w => w.id === 'calendar-widget');\r\n                if (!hasCalendar) {\r\n                    this.defaultWidgets.push({ \r\n                        id: 'calendar-widget', \r\n                        name: 'Calendrier', \r\n                        visible: true, \r\n                        order: 10, \r\n                        size: 'full' \r\n                    });\r\n                    console.log('‚úÖ Widget calendrier ajout√© √† la configuration');\r\n                }\r\n            } catch (e) {\r\n                console.error('Erreur chargement layout:', e);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Sauvegarder la configuration\r\n    saveLayout(): void {\r\n        const layout: DashboardLayout = {\r\n            widgets: this.defaultWidgets\r\n        };\r\n        localStorage.setItem('dashboard-layout', JSON.stringify(layout));\r\n        console.log('‚úÖ Layout sauvegard√©');\r\n    }\r\n\r\n    // Restaurer le layout au chargement\r\n    restoreLayout(): void {\r\n        const container = document.querySelector('#dashboard-screen > .grid');\r\n        if (!container) {\r\n            console.warn('‚ö†Ô∏è Container du dashboard non trouv√©');\r\n            return;\r\n        }\r\n\r\n        console.log('üîÑ Restauration du layout...');\r\n\r\n        // Trier les widgets par ordre\r\n        const sortedWidgets = this.getWidgets();\r\n        \r\n        // R√©organiser les √©l√©ments dans le DOM selon l'ordre sauvegard√©\r\n        sortedWidgets.forEach((widget) => {\r\n            const element = document.querySelector(`[data-widget-id=\"${widget.id}\"]`) as HTMLElement;\r\n            if (element) {\r\n                // Appliquer la visibilit√©\r\n                if (!widget.visible) {\r\n                    element.style.display = 'none';\r\n                }\r\n                \r\n                // Appliquer l'√©tat collapsed\r\n                if (widget.collapsed) {\r\n                    const content = element.querySelector('.widget-content') as HTMLElement;\r\n                    if (content) {\r\n                        content.style.display = 'none';\r\n                    }\r\n                    \r\n                    // Mettre √† jour l'ic√¥ne\r\n                    const collapseBtn = element.querySelector('.widget-collapse-toggle i');\r\n                    if (collapseBtn) {\r\n                        collapseBtn.classList.remove('fa-chevron-up');\r\n                        collapseBtn.classList.add('fa-chevron-down');\r\n                    }\r\n                }\r\n                \r\n                // D√©placer l'√©l√©ment √† la fin (dans l'ordre)\r\n                container.appendChild(element);\r\n            }\r\n        });\r\n\r\n        console.log('‚úÖ Layout restaur√©');\r\n    }\r\n\r\n    // Obtenir les widgets tri√©s\r\n    getWidgets(): WidgetConfig[] {\r\n        return [...this.defaultWidgets].sort((a, b) => a.order - b.order);\r\n    }\r\n\r\n    // Obtenir les widgets visibles\r\n    getVisibleWidgets(): WidgetConfig[] {\r\n        return this.getWidgets().filter(w => w.visible);\r\n    }\r\n\r\n    // Activer/D√©sactiver le mode √©dition\r\n    toggleEditMode(): boolean {\r\n        this.editMode = !this.editMode;\r\n        \r\n        if (this.editMode) {\r\n            this.enableEditMode();\r\n        } else {\r\n            this.disableEditMode();\r\n        }\r\n        \r\n        return this.editMode;\r\n    }\r\n\r\n    isEditMode(): boolean {\r\n        return this.editMode;\r\n    }\r\n\r\n    // Activer le mode √©dition\r\n    private enableEditMode(): void {\r\n        const dashboard = document.getElementById('dashboard-screen');\r\n        if (!dashboard) return;\r\n\r\n        dashboard.classList.add('edit-mode');\r\n        \r\n        // R√©afficher TOUS les widgets (m√™me les masqu√©s) en mode √©dition\r\n        this.defaultWidgets.forEach(widget => {\r\n            const element = document.querySelector(`[data-widget-id=\"${widget.id}\"]`);\r\n            if (element) {\r\n                (element as HTMLElement).style.display = '';\r\n            }\r\n        });\r\n        \r\n        // Ajouter les contr√¥les d'√©dition √† chaque widget\r\n        const widgets = dashboard.querySelectorAll('[data-widget-id]');\r\n        widgets.forEach(widget => {\r\n            const element = widget as HTMLElement;\r\n            const widgetId = element.dataset.widgetId;\r\n            const config = this.defaultWidgets.find(w => w.id === widgetId);\r\n            \r\n            if (!config) return;\r\n\r\n            const isHidden = !config.visible;\r\n\r\n            // Appliquer le style \"masqu√©\" si le widget est cach√©\r\n            if (isHidden) {\r\n                element.classList.add('widget-hidden');\r\n                element.style.opacity = '0.5';\r\n                element.style.filter = 'grayscale(100%)';\r\n            }\r\n\r\n            // Ajouter la barre d'outils\r\n            const toolbar = document.createElement('div');\r\n            toolbar.className = 'widget-toolbar absolute top-2 right-2 flex gap-2 bg-white dark:bg-gray-800 p-2 rounded-lg shadow-lg z-10';\r\n            \r\n            if (isHidden) {\r\n                // Widget masqu√© - bouton pour r√©afficher\r\n                toolbar.innerHTML = `\r\n                    <button class=\"widget-show-btn p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\" title=\"Afficher\">\r\n                        <i class=\"fas fa-eye text-green-600\"></i>\r\n                    </button>\r\n                    <i class=\"fas fa-grip-vertical text-gray-600 dark:text-gray-400 p-2 cursor-move\" title=\"D√©placer\"></i>\r\n                `;\r\n            } else {\r\n                // Widget visible - bouton pour masquer\r\n                toolbar.innerHTML = `\r\n                    <button class=\"widget-hide-btn p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\" title=\"Masquer\">\r\n                        <i class=\"fas fa-eye-slash text-red-600\"></i>\r\n                    </button>\r\n                    <i class=\"fas fa-grip-vertical text-gray-600 dark:text-gray-400 p-2 cursor-move\" title=\"D√©placer\"></i>\r\n                `;\r\n            }\r\n\r\n            element.style.position = 'relative';\r\n            element.classList.add('widget-editable', 'border-2', 'border-dashed', 'border-gray-300', 'dark:border-gray-600');\r\n            element.insertBefore(toolbar, element.firstChild);\r\n\r\n            // Event listeners\r\n            const hideBtn = toolbar.querySelector('.widget-hide-btn');\r\n            const showBtn = toolbar.querySelector('.widget-show-btn');\r\n            \r\n            hideBtn?.addEventListener('click', () => this.hideWidgetInEditMode(widgetId!));\r\n            showBtn?.addEventListener('click', () => this.showWidgetInEditMode(widgetId!));\r\n\r\n            // Drag & drop - utiliser la toolbar comme handle\r\n            toolbar.addEventListener('mousedown', (e) => {\r\n                const target = e.target as HTMLElement;\r\n                // Seulement si on clique sur l'ic√¥ne grip\r\n                if (target.classList.contains('fa-grip-vertical') || target.closest('.fa-grip-vertical')) {\r\n                    element.draggable = true;\r\n                }\r\n            });\r\n\r\n            element.addEventListener('dragstart', (e) => this.handleWidgetDragStart(e));\r\n            element.addEventListener('dragend', (e) => {\r\n                this.handleWidgetDragEnd(e);\r\n                element.draggable = false;\r\n            });\r\n            element.addEventListener('dragover', (e) => this.handleWidgetDragOver(e));\r\n            element.addEventListener('drop', (e) => this.handleWidgetDrop(e));\r\n            element.addEventListener('dragenter', (e) => this.handleWidgetDragEnter(e));\r\n            element.addEventListener('dragleave', (e) => this.handleWidgetDragLeave(e));\r\n        });\r\n    }\r\n\r\n    // D√©sactiver le mode √©dition\r\n    private disableEditMode(): void {\r\n        const dashboard = document.getElementById('dashboard-screen');\r\n        if (!dashboard) return;\r\n\r\n        dashboard.classList.remove('edit-mode');\r\n        \r\n        // Retirer les contr√¥les de TOUS les widgets\r\n        const widgets = document.querySelectorAll('[data-widget-id]');\r\n        widgets.forEach(widget => {\r\n            const element = widget as HTMLElement;\r\n            const widgetId = element.dataset.widgetId;\r\n            const config = this.defaultWidgets.find(w => w.id === widgetId);\r\n            \r\n            element.classList.remove('widget-editable', 'widget-hidden', 'border-2', 'border-dashed', 'border-gray-300', 'dark:border-gray-600');\r\n            element.draggable = false;\r\n            element.style.position = '';\r\n            element.style.opacity = '';\r\n            element.style.filter = '';\r\n            \r\n            // Supprimer toutes les barres d'outils\r\n            const toolbars = element.querySelectorAll('.widget-toolbar');\r\n            toolbars.forEach(toolbar => toolbar.remove());\r\n            \r\n            // Masquer les widgets qui doivent √™tre masqu√©s\r\n            if (config && !config.visible) {\r\n                element.style.display = 'none';\r\n            }\r\n        });\r\n\r\n        this.saveLayout();\r\n        console.log('‚úÖ Mode √©dition d√©sactiv√©');\r\n    }\r\n\r\n    // Masquer un widget\r\n    hideWidget(widgetId: string): void {\r\n        const widget = this.defaultWidgets.find(w => w.id === widgetId);\r\n        if (widget) {\r\n            widget.visible = false;\r\n            this.saveLayout();\r\n            \r\n            // Masquer visuellement\r\n            const element = document.querySelector(`[data-widget-id=\"${widgetId}\"]`);\r\n            if (element) {\r\n                (element as HTMLElement).style.display = 'none';\r\n            }\r\n        }\r\n    }\r\n\r\n    // Masquer un widget en mode √©dition (met √† jour le style sans rafra√Æchir)\r\n    hideWidgetInEditMode(widgetId: string): void {\r\n        const widget = this.defaultWidgets.find(w => w.id === widgetId);\r\n        if (widget) {\r\n            widget.visible = false;\r\n            this.saveLayout();\r\n            \r\n            // Mettre √† jour le style du widget directement\r\n            const element = document.querySelector(`[data-widget-id=\"${widgetId}\"]`) as HTMLElement;\r\n            if (element) {\r\n                element.classList.add('widget-hidden');\r\n                element.style.opacity = '0.5';\r\n                element.style.filter = 'grayscale(100%)';\r\n                \r\n                // Changer l'ic√¥ne\r\n                const toolbar = element.querySelector('.widget-toolbar');\r\n                if (toolbar) {\r\n                    toolbar.innerHTML = `\r\n                        <button class=\"widget-show-btn p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\" title=\"Afficher\">\r\n                            <i class=\"fas fa-eye text-green-600\"></i>\r\n                        </button>\r\n                        <button class=\"widget-drag-handle p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded cursor-move\" title=\"D√©placer\">\r\n                            <i class=\"fas fa-grip-vertical text-gray-600 dark:text-gray-400\"></i>\r\n                        </button>\r\n                    `;\r\n                    \r\n                    // R√©attacher les event listeners\r\n                    const showBtn = toolbar.querySelector('.widget-show-btn');\r\n                    showBtn?.addEventListener('click', () => this.showWidgetInEditMode(widgetId));\r\n                }\r\n                \r\n                console.log(`‚úÖ Widget \"${widget.name}\" masqu√©`);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Afficher un widget en mode √©dition (met √† jour le style sans rafra√Æchir)\r\n    showWidgetInEditMode(widgetId: string): void {\r\n        const widget = this.defaultWidgets.find(w => w.id === widgetId);\r\n        if (widget) {\r\n            widget.visible = true;\r\n            this.saveLayout();\r\n            \r\n            // Mettre √† jour le style du widget directement\r\n            const element = document.querySelector(`[data-widget-id=\"${widgetId}\"]`) as HTMLElement;\r\n            if (element) {\r\n                element.classList.remove('widget-hidden');\r\n                element.style.opacity = '';\r\n                element.style.filter = '';\r\n                \r\n                // Changer l'ic√¥ne\r\n                const toolbar = element.querySelector('.widget-toolbar');\r\n                if (toolbar) {\r\n                    toolbar.innerHTML = `\r\n                        <button class=\"widget-hide-btn p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded\" title=\"Masquer\">\r\n                            <i class=\"fas fa-eye-slash text-red-600\"></i>\r\n                        </button>\r\n                        <button class=\"widget-drag-handle p-2 hover:bg-gray-100 dark:hover:bg-gray-700 rounded cursor-move\" title=\"D√©placer\">\r\n                            <i class=\"fas fa-grip-vertical text-gray-600 dark:text-gray-400\"></i>\r\n                        </button>\r\n                    `;\r\n                    \r\n                    // R√©attacher les event listeners\r\n                    const hideBtn = toolbar.querySelector('.widget-hide-btn');\r\n                    hideBtn?.addEventListener('click', () => this.hideWidgetInEditMode(widgetId));\r\n                }\r\n                \r\n                console.log(`‚úÖ Widget \"${widget.name}\" r√©affich√©`);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Afficher un widget\r\n    showWidget(widgetId: string): void {\r\n        const widget = this.defaultWidgets.find(w => w.id === widgetId);\r\n        if (widget) {\r\n            widget.visible = true;\r\n            this.saveLayout();\r\n            \r\n            // R√©afficher visuellement\r\n            const element = document.querySelector(`[data-widget-id=\"${widgetId}\"]`);\r\n            if (element) {\r\n                (element as HTMLElement).style.display = '';\r\n            }\r\n            \r\n            console.log(`‚úÖ Widget \"${widget.name}\" r√©affich√©`);\r\n        }\r\n    }\r\n\r\n    // Plier/D√©plier un widget\r\n    toggleWidgetCollapse(widgetId: string): void {\r\n        const element = document.querySelector(`[data-widget-id=\"${widgetId}\"]`) as HTMLElement;\r\n        if (!element) {\r\n            console.warn(`‚ö†Ô∏è Widget ${widgetId} non trouv√©`);\r\n            return;\r\n        }\r\n\r\n        const widget = this.defaultWidgets.find(w => w.id === widgetId);\r\n        if (!widget) {\r\n            console.warn(`‚ö†Ô∏è Config widget ${widgetId} non trouv√©e`);\r\n            return;\r\n        }\r\n\r\n        // Chercher le contenu √† plier - priorit√© √† .widget-content\r\n        let content = element.querySelector('.widget-content') as HTMLElement;\r\n        \r\n        if (!content) {\r\n            console.warn(`‚ö†Ô∏è Contenu du widget ${widgetId} non trouv√©`);\r\n            return;\r\n        }\r\n\r\n        // Chercher le bouton (en mode √©dition ou normal)\r\n        const collapseBtnEdit = element.querySelector('.widget-collapse-btn i');\r\n        const collapseBtnNormal = element.querySelector('.widget-collapse-toggle i');\r\n        const collapseBtn = collapseBtnEdit || collapseBtnNormal;\r\n\r\n        const isCollapsed = content.style.display === 'none';\r\n\r\n        console.log(`üîÑ Toggle widget ${widgetId}, actuellement ${isCollapsed ? 'pli√©' : 'd√©pli√©'}`);\r\n\r\n        if (isCollapsed) {\r\n            // D√©plier\r\n            content.style.display = '';\r\n            widget.collapsed = false;\r\n            if (collapseBtn) {\r\n                collapseBtn.classList.remove('fa-chevron-down');\r\n                collapseBtn.classList.add('fa-chevron-up');\r\n            }\r\n        } else {\r\n            // Plier\r\n            content.style.display = 'none';\r\n            widget.collapsed = true;\r\n            if (collapseBtn) {\r\n                collapseBtn.classList.remove('fa-chevron-up');\r\n                collapseBtn.classList.add('fa-chevron-down');\r\n            }\r\n        }\r\n\r\n        // Sauvegarder l'√©tat\r\n        this.saveLayout();\r\n        console.log(`‚úÖ Widget \"${widget.name}\" ${widget.collapsed ? 'pli√©' : 'd√©pli√©'}`);\r\n    }\r\n\r\n    // Drag & Drop handlers\r\n    private draggedWidget: HTMLElement | null = null;\r\n\r\n    private handleWidgetDragStart(e: Event): void {\r\n        const dragEvent = e as DragEvent;\r\n        this.draggedWidget = (dragEvent.target as HTMLElement).closest('[data-widget-id]') as HTMLElement;\r\n        \r\n        if (this.draggedWidget) {\r\n            this.draggedWidget.classList.add('opacity-50');\r\n            if (dragEvent.dataTransfer) {\r\n                dragEvent.dataTransfer.effectAllowed = 'move';\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleWidgetDragEnd(_e: Event): void {\r\n        if (this.draggedWidget) {\r\n            this.draggedWidget.classList.remove('opacity-50');\r\n        }\r\n        \r\n        // Retirer les indicateurs\r\n        document.querySelectorAll('[data-widget-id]').forEach(el => {\r\n            el.classList.remove('border-primary', 'border-4');\r\n        });\r\n    }\r\n\r\n    private handleWidgetDragOver(e: Event): void {\r\n        e.preventDefault();\r\n        const dragEvent = e as DragEvent;\r\n        if (dragEvent.dataTransfer) {\r\n            dragEvent.dataTransfer.dropEffect = 'move';\r\n        }\r\n    }\r\n\r\n    private handleWidgetDragEnter(e: Event): void {\r\n        const target = (e.target as HTMLElement).closest('[data-widget-id]') as HTMLElement;\r\n        if (target && target !== this.draggedWidget) {\r\n            target.classList.add('border-primary', 'border-4');\r\n        }\r\n    }\r\n\r\n    private handleWidgetDragLeave(e: Event): void {\r\n        const target = (e.target as HTMLElement).closest('[data-widget-id]') as HTMLElement;\r\n        if (target) {\r\n            target.classList.remove('border-primary', 'border-4');\r\n        }\r\n    }\r\n\r\n    private handleWidgetDrop(e: Event): void {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        \r\n        const dropTarget = (e.target as HTMLElement).closest('[data-widget-id]') as HTMLElement;\r\n        \r\n        if (!dropTarget || !this.draggedWidget || dropTarget === this.draggedWidget) {\r\n            return;\r\n        }\r\n\r\n        const draggedId = this.draggedWidget.dataset.widgetId;\r\n        const dropId = dropTarget.dataset.widgetId;\r\n\r\n        if (draggedId && dropId) {\r\n            this.reorderWidgets(draggedId, dropId);\r\n        }\r\n\r\n        dropTarget.classList.remove('border-primary', 'border-4');\r\n    }\r\n\r\n    // R√©organiser les widgets\r\n    private reorderWidgets(draggedId: string, dropId: string): void {\r\n        const draggedWidget = this.defaultWidgets.find(w => w.id === draggedId);\r\n        const dropWidget = this.defaultWidgets.find(w => w.id === dropId);\r\n\r\n        if (!draggedWidget || !dropWidget) return;\r\n\r\n        const draggedOrder = draggedWidget.order;\r\n        const dropOrder = dropWidget.order;\r\n\r\n        // √âchanger les ordres\r\n        draggedWidget.order = dropOrder;\r\n        dropWidget.order = draggedOrder;\r\n\r\n        this.saveLayout();\r\n        \r\n        // R√©organiser visuellement dans le DOM\r\n        this.reorderDOM(draggedId, dropId);\r\n        \r\n        console.log('‚úÖ Widgets r√©organis√©s:', { draggedId, dropId });\r\n    }\r\n\r\n    // R√©organiser les √©l√©ments dans le DOM\r\n    private reorderDOM(draggedId: string, dropId: string): void {\r\n        const container = document.querySelector('#dashboard-screen > .grid');\r\n        if (!container) return;\r\n\r\n        const draggedElement = document.querySelector(`[data-widget-id=\"${draggedId}\"]`);\r\n        const dropElement = document.querySelector(`[data-widget-id=\"${dropId}\"]`);\r\n\r\n        if (!draggedElement || !dropElement) return;\r\n\r\n        // Ins√©rer l'√©l√©ment gliss√© avant l'√©l√©ment cible\r\n        container.insertBefore(draggedElement, dropElement);\r\n        \r\n        // R√©initialiser le mode √©dition pour r√©attacher les event listeners\r\n        if (this.editMode) {\r\n            // Sauvegarder l'√©tat du mode √©dition\r\n            const wasEditMode = this.editMode;\r\n            this.editMode = false; // Temporairement d√©sactiver pour √©viter la sauvegarde\r\n            \r\n            // Nettoyer et r√©activer\r\n            this.disableEditMode();\r\n            \r\n            setTimeout(() => {\r\n                this.editMode = wasEditMode;\r\n                this.enableEditMode();\r\n            }, 50);\r\n        }\r\n    }\r\n\r\n    // Ouvrir le modal de gestion des widgets\r\n    openWidgetsModal(): void {\r\n        const modal = document.getElementById('widgets-modal');\r\n        const listContainer = document.getElementById('widgets-list');\r\n        \r\n        if (!modal || !listContainer) return;\r\n\r\n        // S√©parer les widgets visibles et masqu√©s\r\n        const visibleWidgets = this.defaultWidgets.filter(w => w.visible);\r\n        const hiddenWidgets = this.defaultWidgets.filter(w => !w.visible);\r\n\r\n        let html = '';\r\n\r\n        // Afficher les widgets visibles\r\n        if (visibleWidgets.length > 0) {\r\n            html += '<div class=\"mb-4\"><h4 class=\"text-sm font-semibold text-gray-600 dark:text-gray-400 mb-2\">Widgets Affich√©s</h4>';\r\n            html += visibleWidgets.map(widget => `\r\n                <div class=\"flex items-center gap-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg mb-2\">\r\n                    <i class=\"fas fa-eye text-green-500\"></i>\r\n                    <span class=\"flex-1 text-gray-800 dark:text-gray-200 font-medium\">${widget.name}</span>\r\n                    <button class=\"hide-widget-btn text-red-500 hover:text-red-700 transition-colors\" data-widget-id=\"${widget.id}\" title=\"Masquer\">\r\n                        <i class=\"fas fa-eye-slash\"></i>\r\n                    </button>\r\n                </div>\r\n            `).join('');\r\n            html += '</div>';\r\n        }\r\n\r\n        // Afficher les widgets masqu√©s\r\n        if (hiddenWidgets.length > 0) {\r\n            html += '<div><h4 class=\"text-sm font-semibold text-gray-600 dark:text-gray-400 mb-2\">Widgets Masqu√©s</h4>';\r\n            html += hiddenWidgets.map(widget => `\r\n                <div class=\"flex items-center gap-3 p-3 bg-red-50 dark:bg-red-900/20 rounded-lg mb-2 opacity-60\">\r\n                    <i class=\"fas fa-eye-slash text-red-500\"></i>\r\n                    <span class=\"flex-1 text-gray-800 dark:text-gray-200 font-medium line-through\">${widget.name}</span>\r\n                    <button class=\"show-widget-btn text-green-500 hover:text-green-700 transition-colors\" data-widget-id=\"${widget.id}\" title=\"Afficher\">\r\n                        <i class=\"fas fa-eye\"></i>\r\n                    </button>\r\n                </div>\r\n            `).join('');\r\n            html += '</div>';\r\n        }\r\n\r\n        if (visibleWidgets.length === 0 && hiddenWidgets.length === 0) {\r\n            html = '<p class=\"text-center text-gray-500 dark:text-gray-400 py-4\">Aucun widget disponible</p>';\r\n        }\r\n\r\n        listContainer.innerHTML = html;\r\n\r\n        // Event listeners pour les boutons masquer\r\n        listContainer.querySelectorAll('.hide-widget-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const target = e.currentTarget as HTMLElement;\r\n                const widgetId = target.dataset.widgetId;\r\n                if (widgetId) {\r\n                    this.hideWidget(widgetId);\r\n                    // Rafra√Æchir le modal\r\n                    this.openWidgetsModal();\r\n                }\r\n            });\r\n        });\r\n\r\n        // Event listeners pour les boutons afficher\r\n        listContainer.querySelectorAll('.show-widget-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const target = e.currentTarget as HTMLElement;\r\n                const widgetId = target.dataset.widgetId;\r\n                if (widgetId) {\r\n                    this.showWidget(widgetId);\r\n                    // Rafra√Æchir le modal\r\n                    this.openWidgetsModal();\r\n                }\r\n            });\r\n        });\r\n\r\n        modal.classList.remove('hidden');\r\n    }\r\n\r\n    // Fermer le modal\r\n    closeWidgetsModal(): void {\r\n        const modal = document.getElementById('widgets-modal');\r\n        if (modal) {\r\n            modal.classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    // R√©initialiser le layout par d√©faut\r\n    resetLayout(): void {\r\n        if (!confirm('√ätes-vous s√ªr de vouloir r√©initialiser le layout ? Tous vos widgets seront r√©affich√©s dans l\\'ordre par d√©faut.')) {\r\n            return;\r\n        }\r\n\r\n        localStorage.removeItem('dashboard-layout');\r\n        this.defaultWidgets = [\r\n            { id: 'summary', name: 'R√©sum√© du mois', visible: true, order: 0, size: 'full' },\r\n            { id: 'transactions', name: 'Derni√®res transactions', visible: true, order: 1, size: 'full' },\r\n            { id: 'chart', name: 'R√©partition Budget', visible: true, order: 2, size: 'medium' },\r\n            { id: 'comparison', name: 'Comparaison Mensuelle', visible: true, order: 3, size: 'medium' },\r\n            { id: 'predictions', name: 'Pr√©dictions', visible: true, order: 4, size: 'medium' },\r\n            { id: 'top-expenses', name: 'Top 5 D√©penses', visible: true, order: 5, size: 'medium' },\r\n            { id: 'stats', name: 'Statistiques Avanc√©es', visible: true, order: 6, size: 'medium' },\r\n            { id: 'recurring', name: 'Transactions R√©currentes', visible: true, order: 7, size: 'medium' },\r\n            { id: 'quick-expense', name: 'Ajout Rapide', visible: true, order: 8, size: 'medium' },\r\n            { id: 'categories', name: 'Mes Cat√©gories', visible: true, order: 9, size: 'full' },\r\n            { id: 'calendar-widget', name: 'Calendrier', visible: true, order: 10, size: 'full' },\r\n        ];\r\n        \r\n        // R√©afficher tous les widgets\r\n        this.defaultWidgets.forEach(widget => {\r\n            const element = document.querySelector(`[data-widget-id=\"${widget.id}\"]`);\r\n            if (element) {\r\n                (element as HTMLElement).style.display = '';\r\n            }\r\n        });\r\n\r\n        this.saveLayout();\r\n        this.restoreLayout();\r\n        this.closeWidgetsModal();\r\n        \r\n        window.dispatchEvent(new CustomEvent('widgets-changed'));\r\n    }\r\n}\r\n","import type { DataManager } from './DataManager';\nimport type { RecurringTransaction } from '@/types';\n\n// Gestionnaire de calendrier pour planifier les transactions\nexport class CalendarManager {\n    private currentMonth: Date;\n\n    constructor(private dataManager: DataManager) {\n        this.currentMonth = new Date();\n    }\n\n    // Obtenir le mois actuel\n    getCurrentMonth(): Date {\n        return this.currentMonth;\n    }\n\n    // Changer de mois\n    setMonth(year: number, month: number): void {\n        this.currentMonth = new Date(year, month, 1);\n    }\n\n    // Mois suivant\n    nextMonth(): void {\n        this.currentMonth.setMonth(this.currentMonth.getMonth() + 1);\n    }\n\n    // Mois pr√©c√©dent\n    prevMonth(): void {\n        this.currentMonth.setMonth(this.currentMonth.getMonth() - 1);\n    }\n\n    // Obtenir les jours du mois avec les transactions\n    getMonthDays(): Array<{\n        date: Date;\n        isCurrentMonth: boolean;\n        isToday: boolean;\n        transactions: any[];\n        recurringTransactions: RecurringTransaction[];\n    }> {\n        const year = this.currentMonth.getFullYear();\n        const month = this.currentMonth.getMonth();\n        \n        // Premier jour du mois\n        const firstDay = new Date(year, month, 1);\n        // Dernier jour du mois\n        const lastDay = new Date(year, month + 1, 0);\n        \n        // Jour de la semaine du premier jour (0 = dimanche, 1 = lundi, etc.)\n        let startDay = firstDay.getDay();\n        // Convertir pour que lundi = 0\n        startDay = startDay === 0 ? 6 : startDay - 1;\n        \n        const days = [];\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        \n        // Jours du mois pr√©c√©dent\n        const prevMonthLastDay = new Date(year, month, 0).getDate();\n        for (let i = startDay - 1; i >= 0; i--) {\n            const date = new Date(year, month - 1, prevMonthLastDay - i);\n            days.push({\n                date,\n                isCurrentMonth: false,\n                isToday: false,\n                transactions: this.getTransactionsForDate(date),\n                recurringTransactions: this.getRecurringForDate(date)\n            });\n        }\n        \n        // Jours du mois actuel\n        for (let day = 1; day <= lastDay.getDate(); day++) {\n            const date = new Date(year, month, day);\n            const isToday = date.getTime() === today.getTime();\n            days.push({\n                date,\n                isCurrentMonth: true,\n                isToday,\n                transactions: this.getTransactionsForDate(date),\n                recurringTransactions: this.getRecurringForDate(date)\n            });\n        }\n        \n        // Jours du mois suivant pour compl√©ter la grille\n        const remainingDays = 42 - days.length; // 6 semaines * 7 jours\n        for (let day = 1; day <= remainingDays; day++) {\n            const date = new Date(year, month + 1, day);\n            days.push({\n                date,\n                isCurrentMonth: false,\n                isToday: false,\n                transactions: this.getTransactionsForDate(date),\n                recurringTransactions: this.getRecurringForDate(date)\n            });\n        }\n        \n        return days;\n    }\n\n    // Obtenir les transactions pour une date donn√©e\n    private getTransactionsForDate(date: Date): any[] {\n        const data = this.dataManager.getData();\n        const dateStr = date.toISOString().split('T')[0];\n        \n        return data.transactions.filter(t => {\n            const transactionDate = new Date(t.date).toISOString().split('T')[0];\n            return transactionDate === dateStr;\n        });\n    }\n\n    // Obtenir les transactions r√©currentes pr√©vues pour une date\n    private getRecurringForDate(date: Date): RecurringTransaction[] {\n        const data = this.dataManager.getData();\n        const day = date.getDate();\n        \n        return data.recurringTransactions.filter(r => {\n            if (!r.active) return false;\n            \n            if (r.frequency === 'monthly') {\n                return r.day === day;\n            }\n            \n            // TODO: G√©rer weekly et yearly\n            return false;\n        });\n    }\n\n    // Obtenir le nom du mois\n    getMonthName(): string {\n        return this.currentMonth.toLocaleDateString('fr-FR', { month: 'long', year: 'numeric' });\n    }\n\n    // Calculer le total des d√©penses pr√©vues pour le mois\n    getMonthlyProjection(): number {\n        const days = this.getMonthDays();\n        let total = 0;\n        \n        days.forEach(day => {\n            if (day.isCurrentMonth) {\n                // Transactions existantes\n                day.transactions.forEach(t => {\n                    total += t.amount;\n                });\n                \n                // Transactions r√©currentes pr√©vues\n                day.recurringTransactions.forEach(r => {\n                    total += r.amount;\n                });\n            }\n        });\n        \n        return total;\n    }\n}\n","// Gestionnaire de gestes tactiles pour mobile\nexport class TouchGestureManager {\n    private touchStartX: number = 0;\n    private touchStartY: number = 0;\n    private touchEndX: number = 0;\n    private touchEndY: number = 0;\n    private minSwipeDistance: number = 50;\n\n    constructor() {\n        this.initializeGestures();\n    }\n\n    // Initialiser les gestes tactiles\n    private initializeGestures(): void {\n        // D√©tecter si on est sur mobile\n        if (!this.isMobile()) {\n            return;\n        }\n\n        console.log('üì± Initialisation des gestes tactiles...');\n\n        // Swipe sur les transactions pour supprimer\n        this.initializeTransactionSwipe();\n\n        // Swipe sur les cat√©gories\n        this.initializeCategorySwipe();\n\n        // Pull to refresh\n        this.initializePullToRefresh();\n\n        console.log('‚úÖ Gestes tactiles initialis√©s');\n    }\n\n    // V√©rifier si on est sur mobile\n    private isMobile(): boolean {\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) ||\n               window.innerWidth <= 768;\n    }\n\n    // Swipe sur les transactions\n    private initializeTransactionSwipe(): void {\n        document.addEventListener('touchstart', (e) => {\n            const target = e.target as HTMLElement;\n            const transaction = target.closest('[data-transaction-id]');\n            \n            if (transaction) {\n                this.touchStartX = e.touches[0].clientX;\n                this.touchStartY = e.touches[0].clientY;\n            }\n        }, { passive: true });\n\n        document.addEventListener('touchmove', (e) => {\n            const target = e.target as HTMLElement;\n            const transaction = target.closest('[data-transaction-id]') as HTMLElement;\n            \n            if (transaction) {\n                this.touchEndX = e.touches[0].clientX;\n                this.touchEndY = e.touches[0].clientY;\n                \n                const deltaX = this.touchEndX - this.touchStartX;\n                const deltaY = Math.abs(this.touchEndY - this.touchStartY);\n                \n                // Swipe horizontal uniquement\n                if (Math.abs(deltaX) > deltaY) {\n                    e.preventDefault();\n                    transaction.style.transform = `translateX(${deltaX}px)`;\n                    transaction.style.transition = 'none';\n                    \n                    // Afficher les boutons d'action\n                    if (Math.abs(deltaX) > this.minSwipeDistance) {\n                        transaction.style.backgroundColor = deltaX < 0 ? '#fee2e2' : '#dbeafe';\n                    }\n                }\n            }\n        }, { passive: false });\n\n        document.addEventListener('touchend', (e) => {\n            const target = e.target as HTMLElement;\n            const transaction = target.closest('[data-transaction-id]') as HTMLElement;\n            \n            if (transaction) {\n                const deltaX = this.touchEndX - this.touchStartX;\n                \n                transaction.style.transition = 'transform 0.3s ease, background-color 0.3s ease';\n                \n                // Swipe left pour supprimer\n                if (deltaX < -this.minSwipeDistance * 2) {\n                    const transactionId = transaction.dataset.transactionId;\n                    if (transactionId) {\n                        // Dispatch event pour supprimer\n                        window.dispatchEvent(new CustomEvent('delete-transaction-swipe', {\n                            detail: { transactionId }\n                        }));\n                    }\n                } else {\n                    // R√©initialiser\n                    transaction.style.transform = '';\n                    transaction.style.backgroundColor = '';\n                }\n                \n                this.touchStartX = 0;\n                this.touchEndX = 0;\n            }\n        });\n    }\n\n    // Swipe sur les cat√©gories\n    private initializeCategorySwipe(): void {\n        let categoryContainer: HTMLElement | null = null;\n\n        document.addEventListener('touchstart', (e) => {\n            const target = e.target as HTMLElement;\n            categoryContainer = target.closest('#categories-list');\n            \n            if (categoryContainer) {\n                this.touchStartX = e.touches[0].clientX;\n            }\n        }, { passive: true });\n\n        document.addEventListener('touchmove', (e) => {\n            if (categoryContainer) {\n                this.touchEndX = e.touches[0].clientX;\n                const deltaX = this.touchEndX - this.touchStartX;\n                \n                // Scroll horizontal fluide\n                if (Math.abs(deltaX) > 10) {\n                    categoryContainer.scrollLeft -= deltaX / 2;\n                }\n            }\n        }, { passive: true });\n    }\n\n    // Pull to refresh\n    private initializePullToRefresh(): void {\n        let startY = 0;\n        let isPulling = false;\n        const refreshThreshold = 80;\n\n        document.addEventListener('touchstart', (e) => {\n            if (window.scrollY === 0) {\n                startY = e.touches[0].clientY;\n                isPulling = true;\n            }\n        }, { passive: true });\n\n        document.addEventListener('touchmove', (e) => {\n            if (!isPulling) return;\n\n            const currentY = e.touches[0].clientY;\n            const pullDistance = currentY - startY;\n\n            if (pullDistance > 0 && pullDistance < refreshThreshold * 2) {\n                // Afficher un indicateur de pull\n                const indicator = document.getElementById('pull-refresh-indicator');\n                if (indicator) {\n                    indicator.style.transform = `translateY(${Math.min(pullDistance, refreshThreshold)}px)`;\n                    indicator.style.opacity = `${Math.min(pullDistance / refreshThreshold, 1)}`;\n                }\n            }\n        }, { passive: true });\n\n        document.addEventListener('touchend', (e) => {\n            if (!isPulling) return;\n\n            const currentY = e.changedTouches[0].clientY;\n            const pullDistance = currentY - startY;\n\n            if (pullDistance > refreshThreshold) {\n                // D√©clencher le refresh\n                window.dispatchEvent(new CustomEvent('pull-to-refresh'));\n            }\n\n            // R√©initialiser l'indicateur\n            const indicator = document.getElementById('pull-refresh-indicator');\n            if (indicator) {\n                indicator.style.transform = '';\n                indicator.style.opacity = '0';\n            }\n\n            isPulling = false;\n        });\n    }\n\n    // D√©tecter un tap (clic rapide)\n    detectTap(element: HTMLElement, callback: () => void): void {\n        let tapStartTime = 0;\n        const tapDuration = 200; // ms\n\n        element.addEventListener('touchstart', () => {\n            tapStartTime = Date.now();\n        }, { passive: true });\n\n        element.addEventListener('touchend', (e) => {\n            const tapEndTime = Date.now();\n            if (tapEndTime - tapStartTime < tapDuration) {\n                e.preventDefault();\n                callback();\n            }\n        });\n    }\n\n    // D√©tecter un long press\n    detectLongPress(element: HTMLElement, callback: () => void): void {\n        let pressTimer: number;\n        const longPressDuration = 500; // ms\n\n        element.addEventListener('touchstart', () => {\n            pressTimer = window.setTimeout(() => {\n                callback();\n            }, longPressDuration);\n        }, { passive: true });\n\n        element.addEventListener('touchend', () => {\n            clearTimeout(pressTimer);\n        });\n\n        element.addEventListener('touchmove', () => {\n            clearTimeout(pressTimer);\n        });\n    }\n}\n","// Point d'entr√©e principal de l'application Budget Manager\r\nimport { ThemeManager } from './js/modules/ThemeManager';\r\nimport { NotificationManager } from './js/modules/NotificationManager';\r\nimport { DataManager } from './js/modules/DataManager';\r\nimport { UIManager } from './js/modules/UIManager';\r\nimport { ChartManager } from './js/modules/ChartManager';\r\nimport { TransactionManager } from './js/modules/TransactionManager';\r\nimport { CategoryManager } from './js/modules/CategoryManager';\r\nimport { SavingsManager } from './js/modules/SavingsManager';\r\nimport { RecurringManager } from './js/modules/RecurringManager';\r\nimport { ExportManager } from './js/modules/ExportManager';\r\nimport { DragDropManager } from './js/modules/DragDropManager';\r\nimport { WidgetManager } from './js/modules/WidgetManager';\r\nimport { CalendarManager } from './js/modules/CalendarManager';\r\nimport { TouchGestureManager } from './js/modules/TouchGestureManager';\r\nimport type { BudgetTemplate } from './types';\r\n\r\n// Gestionnaire de Budget Principal - Orchestrateur\r\nclass BudgetManager {\r\n    private dataManager: DataManager;\r\n    private themeManager: ThemeManager;\r\n    private uiManager: UIManager;\r\n    private chartManager: ChartManager;\r\n    private transactionManager: TransactionManager;\r\n    private categoryManager: CategoryManager;\r\n    private savingsManager: SavingsManager;\r\n    private recurringManager: RecurringManager;\r\n    private exportManager: ExportManager;\r\n    private notificationManager: NotificationManager;\r\n    private dragDropManager: DragDropManager;\r\n    private widgetManager: WidgetManager;\r\n    private calendarManager: CalendarManager;\r\n    private _touchGestureManager: TouchGestureManager;\r\n    \r\n    // Anti-spam notifications\r\n    private lastAlertKey: string | null = null;\r\n    private lastAlertAt: number = 0;\r\n    private editingTransactionId: string | null = null;\r\n\r\n    constructor() {\r\n        // Initialiser tous les managers\r\n        this.dataManager = new DataManager();\r\n        this.themeManager = new ThemeManager();\r\n        this.uiManager = new UIManager(this.dataManager);\r\n        this.chartManager = new ChartManager(this.dataManager, this.themeManager);\r\n        this.transactionManager = new TransactionManager(this.dataManager);\r\n        this.categoryManager = new CategoryManager(this.dataManager);\r\n        this.savingsManager = new SavingsManager(this.dataManager);\r\n        this.recurringManager = new RecurringManager(this.dataManager);\r\n        this.exportManager = new ExportManager(this.dataManager);\r\n        this.notificationManager = new NotificationManager(this.dataManager, this.uiManager);\r\n        this.dragDropManager = new DragDropManager(this.dataManager);\r\n        this.widgetManager = new WidgetManager(this.dataManager);\r\n        this.calendarManager = new CalendarManager(this.dataManager);\r\n        this._touchGestureManager = new TouchGestureManager();\r\n        \r\n        this.init();\r\n    }\r\n\r\n    async init(): Promise<void> {\r\n        console.log('üöÄ Initialisation de l\\'application...');\r\n        \r\n        // Essayer de charger les donn√©es avec retry\r\n        let retries = 3;\r\n        let loaded = false;\r\n        \r\n        while (retries > 0 && !loaded) {\r\n            try {\r\n                await this.dataManager.loadData();\r\n                loaded = true;\r\n                console.log('‚úÖ Donn√©es charg√©es avec succ√®s');\r\n            } catch (error) {\r\n                retries--;\r\n                if (retries > 0) {\r\n                    console.log(`‚ö†Ô∏è Erreur chargement, nouvelle tentative... (${retries} restantes)`);\r\n                    await new Promise(resolve => setTimeout(resolve, 500)); // Attendre 500ms\r\n                } else {\r\n                    console.error('‚ùå Impossible de charger les donn√©es apr√®s 3 tentatives');\r\n                    this.uiManager.showNotification('Erreur de connexion au serveur', 'error');\r\n                    // Initialiser avec des donn√©es par d√©faut\r\n                    this.dataManager.setData({\r\n                        salary: 0,\r\n                        currentMonth: new Date().toISOString().slice(0, 7),\r\n                        categories: {},\r\n                        transactions: [],\r\n                        recurringTransactions: [],\r\n                        savingsGoals: []\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        \r\n        this.recurringManager.processRecurringTransactions();\r\n        \r\n        // Attendre que le DOM soit compl√®tement pr√™t\r\n        setTimeout(() => {\r\n            this.setupEventListeners();\r\n        }, 100);\r\n        \r\n        this.uiManager.updateCurrentMonth();\r\n        \r\n        if (this.dataManager.isFirstTime()) {\r\n            this.uiManager.showSetupScreen();\r\n        } else {\r\n            this.showDashboard();\r\n        }\r\n        \r\n        // Demander la permission pour les notifications\r\n        this.notificationManager.requestNotificationPermission();\r\n        \r\n        // D√©marrer les v√©rifications p√©riodiques\r\n        this.notificationManager.startPeriodicChecks();\r\n        \r\n        // √âcouter l'√©v√©nement de rendu des cat√©gories pour initialiser le drag & drop\r\n        window.addEventListener('categories-rendered', (e: Event) => {\r\n            const customEvent = e as CustomEvent;\r\n            const container = customEvent.detail.container;\r\n            if (container) {\r\n                this.dragDropManager.initializeDragDrop(container);\r\n            }\r\n        });\r\n        \r\n        // √âcouter l'√©v√©nement de r√©organisation pour rafra√Æchir l'UI\r\n        window.addEventListener('categories-reordered', () => {\r\n            this.updateDashboard();\r\n            this.uiManager.showNotification('‚úÖ Cat√©gories r√©organis√©es', 'success');\r\n        });\r\n\r\n        // Gestes tactiles - Pull to refresh\r\n        window.addEventListener('pull-to-refresh', () => {\r\n            this.handlePullToRefresh();\r\n        });\r\n\r\n        // Gestes tactiles - Swipe pour supprimer\r\n        window.addEventListener('delete-transaction-swipe', (e: Event) => {\r\n            const customEvent = e as CustomEvent;\r\n            const transactionId = customEvent.detail.transactionId;\r\n            if (transactionId) {\r\n                this.deleteTransaction(transactionId);\r\n            }\r\n        });\r\n        \r\n        console.log('‚ú® Application pr√™te !');\r\n    }\r\n\r\n    // Afficher le dashboard\r\n    showDashboard(): void {\r\n        this.uiManager.showDashboard();\r\n        \r\n        // Attendre que le DOM soit mis √† jour avant de mettre √† jour les donn√©es\r\n        setTimeout(() => {\r\n            this.updateDashboard();\r\n            \r\n            // Restaurer le layout des widgets\r\n            this.widgetManager.restoreLayout();\r\n        }, 50);\r\n    }\r\n\r\n    // Mettre √† jour tout le dashboard\r\n    updateDashboard(): void {\r\n        const totalSpent = this.transactionManager.getTotalSpent();\r\n        const data = this.dataManager.getData();\r\n        const remaining = data.salary - totalSpent;\r\n        \r\n        this.uiManager.updateSummary(totalSpent, remaining);\r\n        this.uiManager.updateCategoriesList();\r\n        this.uiManager.updateExpenseForm();\r\n        this.uiManager.updateRecentTransactions(data.transactions);\r\n        this.chartManager.updateChart();\r\n        this.updateSavingsGoals();\r\n        this.updateRecurringTransactions();\r\n        this.updateTopExpenses();\r\n        this.renderWidgetCalendar();\r\n    }\r\n\r\n    // Configuration initiale\r\n    setupEventListeners(): void {\r\n        console.log('üîß Configuration des event listeners...');\r\n        \r\n        // Formulaire de configuration\r\n        document.getElementById('setup-form')!.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            this.handleSetup();\r\n        });\r\n\r\n        // Mise √† jour du total des montants\r\n        const categoryInputs = document.querySelectorAll('#categories-setup input[type=\"number\"]');\r\n        categoryInputs.forEach(input => {\r\n            input.addEventListener('input', () => this.updateTotalAmount());\r\n        });\r\n\r\n        const salaryInput = document.getElementById('monthly-salary');\r\n        if (salaryInput) {\r\n            salaryInput.addEventListener('input', () => this.updateTotalAmount());\r\n        }\r\n\r\n        // Boutons \"Reste ici\"\r\n        const restButtons = document.querySelectorAll('.btn-rest');\r\n        restButtons.forEach(button => {\r\n            button.addEventListener('click', (e) => {\r\n                const target = e.target as HTMLElement;\r\n                this.allocateRemainingBudget(target.dataset.category!);\r\n            });\r\n        });\r\n\r\n        // Formulaire d'ajout de d√©pense\r\n        document.getElementById('expense-form')!.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            this.addExpense();\r\n        });\r\n\r\n        // Bouton d'√©dition des budgets\r\n        document.getElementById('edit-budget-btn')!.addEventListener('click', () => {\r\n            this.openEditBudgetModal();\r\n        });\r\n\r\n        // Bouton voir toutes les transactions\r\n        document.getElementById('show-all-transactions-btn')!.addEventListener('click', () => {\r\n            this.openTransactionsModal('all');\r\n        });\r\n\r\n        // Event listeners pour les transactions\r\n        document.addEventListener('click', (e) => {\r\n            const target = e.target as HTMLElement;\r\n            \r\n            if (target.matches('[data-category=\"all\"]')) {\r\n                this.uiManager.updateButtonColors('all');\r\n                const searchTerm = (document.getElementById('transaction-search') as HTMLInputElement)?.value || '';\r\n                this.filterTransactions('all', searchTerm);\r\n            }\r\n            \r\n            if (target.closest('.edit-transaction-btn')) {\r\n                const transactionId = target.closest<HTMLElement>('.edit-transaction-btn')!.dataset.transactionId!;\r\n                this.openEditTransactionModal(transactionId);\r\n            }\r\n            \r\n            if (target.closest('.delete-transaction-btn')) {\r\n                const transactionId = target.closest<HTMLElement>('.delete-transaction-btn')!.dataset.transactionId!;\r\n                this.deleteTransaction(transactionId);\r\n            }\r\n        });\r\n\r\n        // Param√®tres\r\n        document.getElementById('settings-btn')!.addEventListener('click', () => {\r\n            document.getElementById('settings-modal')!.classList.remove('hidden');\r\n        });\r\n\r\n        document.querySelector('.close-modal')!.addEventListener('click', () => {\r\n            document.getElementById('settings-modal')!.classList.add('hidden');\r\n        });\r\n\r\n        // Modal d'√©dition des budgets\r\n        document.querySelectorAll('.close-edit-modal').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                document.getElementById('edit-budget-modal')!.classList.add('hidden');\r\n            });\r\n        });\r\n\r\n        document.getElementById('edit-budget-form')!.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            this.saveEditedBudgets();\r\n        });\r\n\r\n        document.getElementById('edit-salary')!.addEventListener('input', () => {\r\n            this.updateEditTotals();\r\n        });\r\n\r\n        // Modal des transactions\r\n        document.querySelectorAll('.close-all-transactions-modal').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                document.getElementById('all-transactions-modal')!.classList.add('hidden');\r\n            });\r\n        });\r\n\r\n        document.getElementById('all-transactions-modal')!.addEventListener('click', (e) => {\r\n            if ((e.target as HTMLElement).id === 'all-transactions-modal') {\r\n                document.getElementById('all-transactions-modal')!.classList.add('hidden');\r\n            }\r\n        });\r\n\r\n        // Modal d'√©dition de transaction\r\n        document.querySelectorAll('.close-edit-transaction-modal').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                document.getElementById('edit-transaction-modal')!.classList.add('hidden');\r\n            });\r\n        });\r\n\r\n        document.getElementById('edit-transaction-modal')!.addEventListener('click', (e) => {\r\n            if ((e.target as HTMLElement).id === 'edit-transaction-modal') {\r\n                document.getElementById('edit-transaction-modal')!.classList.add('hidden');\r\n            }\r\n        });\r\n\r\n        document.getElementById('edit-transaction-form')!.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            this.saveEditedTransaction();\r\n        });\r\n\r\n        // Actions - Utilisation de l'event delegation pour les boutons dans les modals\r\n        document.addEventListener('click', (e) => {\r\n            const target = e.target as HTMLElement;\r\n            \r\n            // R√©initialiser le mois\r\n            if (target.closest('#reset-month-btn')) {\r\n                console.log('üîÑ R√©initialiser le mois cliqu√©');\r\n                e.preventDefault();\r\n                this.resetMonth();\r\n            }\r\n            \r\n            // Export donn√©es\r\n            if (target.closest('#export-data-btn')) {\r\n                console.log('üíæ Export donn√©es cliqu√©');\r\n                e.preventDefault();\r\n                this.exportData();\r\n            }\r\n            \r\n            // Import donn√©es\r\n            if (target.closest('#import-data-btn')) {\r\n                console.log('üì• Import donn√©es cliqu√©');\r\n                e.preventDefault();\r\n                document.getElementById('import-file')!.click();\r\n            }\r\n            \r\n            // Charger template\r\n            if (target.closest('#load-template-btn')) {\r\n                console.log('üé® Charger template cliqu√©');\r\n                e.preventDefault();\r\n                this.showTemplateModal();\r\n            }\r\n            \r\n            // Tout r√©initialiser\r\n            if (target.closest('#reset-all-btn')) {\r\n                console.log('üóëÔ∏è Tout r√©initialiser cliqu√©');\r\n                e.preventDefault();\r\n                if (confirm('√ätes-vous s√ªr de vouloir tout r√©initialiser ? Cette action est irr√©versible.')) {\r\n                    this.resetAll();\r\n                }\r\n            }\r\n        });\r\n\r\n        document.getElementById('import-file')!.addEventListener('change', (e) => {\r\n            this.importData(e as Event);\r\n        });\r\n\r\n        // Toggle theme\r\n        document.getElementById('theme-toggle')!.addEventListener('click', () => {\r\n            this.toggleTheme();\r\n        });\r\n\r\n        // Ouvrir le modal de s√©lection de couleur\r\n        document.getElementById('color-theme-btn')!.addEventListener('click', () => {\r\n            this.openColorThemeModal();\r\n        });\r\n\r\n        // Fermer le modal de couleur\r\n        document.querySelector('.close-color-theme-modal')!.addEventListener('click', () => {\r\n            this.closeColorThemeModal();\r\n        });\r\n\r\n        // S√©lection d'un th√®me de couleur\r\n        document.querySelectorAll('.color-theme-option').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const target = e.currentTarget as HTMLElement;\r\n                const theme = target.dataset.theme;\r\n                if (theme && ['blue', 'green', 'red', 'purple', 'orange', 'pink'].includes(theme)) {\r\n                    this.themeManager.setColorTheme(theme as any);\r\n                    const themes = this.themeManager.getAvailableThemes();\r\n                    const themeName = themes[theme as keyof typeof themes]?.name || theme;\r\n                    this.uiManager.showNotification(`üé® Th√®me ${themeName} appliqu√©`, 'success');\r\n                    this.closeColorThemeModal();\r\n                    \r\n                    // Rafra√Æchir les graphiques avec les nouvelles couleurs\r\n                    if (this.chartManager) {\r\n                        this.chartManager.updateChart();\r\n                    }\r\n                }\r\n            });\r\n        });\r\n\r\n        // Mode √âdition\r\n        document.getElementById('edit-mode-btn')!.addEventListener('click', () => {\r\n            const isEditMode = this.widgetManager.toggleEditMode();\r\n            const btn = document.getElementById('edit-mode-btn')!;\r\n            \r\n            if (isEditMode) {\r\n                btn.classList.remove('bg-purple-500', 'hover:bg-purple-600');\r\n                btn.classList.add('bg-green-500', 'hover:bg-green-600');\r\n                btn.innerHTML = '<i class=\"fas fa-save\"></i> <span class=\"hidden md:inline\">Sauvegarder</span>';\r\n                this.uiManager.showNotification('üé® Mode √âdition activ√© - Les widgets masqu√©s apparaissent en gris√©', 'info');\r\n            } else {\r\n                btn.classList.remove('bg-green-500', 'hover:bg-green-600');\r\n                btn.classList.add('bg-purple-500', 'hover:bg-purple-600');\r\n                btn.innerHTML = '<i class=\"fas fa-edit\"></i> <span class=\"hidden md:inline\">√âditer</span>';\r\n                this.uiManager.showNotification('‚úÖ Layout sauvegard√©', 'success');\r\n            }\r\n        });\r\n\r\n        // Modal de gestion des widgets\r\n        document.querySelectorAll('.close-widgets-modal').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                this.widgetManager.closeWidgetsModal();\r\n            });\r\n        });\r\n\r\n        document.getElementById('reset-layout-btn')!.addEventListener('click', () => {\r\n            this.widgetManager.resetLayout();\r\n        });\r\n\r\n        // Widget Calendrier - Navigation\r\n        document.getElementById('widget-prev-month-btn')!.addEventListener('click', () => {\r\n            this.calendarManager.prevMonth();\r\n            this.renderWidgetCalendar();\r\n        });\r\n\r\n        document.getElementById('widget-next-month-btn')!.addEventListener('click', () => {\r\n            this.calendarManager.nextMonth();\r\n            this.renderWidgetCalendar();\r\n        });\r\n\r\n        // Boutons plier/d√©plier des widgets (mode normal) - D√©l√©gation d'√©v√©nements\r\n        document.addEventListener('click', (e) => {\r\n            const target = e.target as HTMLElement;\r\n            const btn = target.closest('.widget-collapse-toggle') as HTMLElement;\r\n            if (btn) {\r\n                e.stopPropagation(); // Emp√™cher la propagation\r\n                const widgetId = btn.dataset.widget;\r\n                if (widgetId) {\r\n                    this.widgetManager.toggleWidgetCollapse(widgetId);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Export PDF\r\n        document.getElementById('export-pdf-btn')!.addEventListener('click', () => {\r\n            this.exportToPDF();\r\n        });\r\n\r\n        // Transactions r√©currentes\r\n        document.getElementById('add-recurring-btn')!.addEventListener('click', () => {\r\n            this.openRecurringModal();\r\n        });\r\n\r\n        document.querySelectorAll('.close-recurring-modal').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                document.getElementById('recurring-modal')!.classList.add('hidden');\r\n            });\r\n        });\r\n\r\n        document.getElementById('recurring-form')!.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            this.addRecurringTransaction();\r\n        });\r\n\r\n        // Templates de budget - Fermeture du modal\r\n        document.querySelectorAll('.close-template-modal').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                document.getElementById('template-modal')!.classList.add('hidden');\r\n            });\r\n        });\r\n\r\n        // Nouvelle cat√©gorie\r\n        document.getElementById('add-category-btn')!.addEventListener('click', () => {\r\n            document.getElementById('new-category-modal')!.classList.remove('hidden');\r\n        });\r\n\r\n        document.querySelectorAll('.close-new-category-modal').forEach(btn => {\r\n            btn.addEventListener('click', () => {\r\n                document.getElementById('new-category-modal')!.classList.add('hidden');\r\n            });\r\n        });\r\n\r\n        document.getElementById('new-category-form')!.addEventListener('submit', (e) => {\r\n            e.preventDefault();\r\n            this.addNewCategory();\r\n        });\r\n\r\n        // S√©lecteurs de couleur pr√©d√©finis\r\n        document.addEventListener('click', (e) => {\r\n            const target = e.target as HTMLElement;\r\n            if (target.classList.contains('color-preset')) {\r\n                const color = target.dataset.color!;\r\n                (document.getElementById('new-category-color') as HTMLInputElement).value = color;\r\n            }\r\n        });\r\n\r\n        // Bouton flottant + et modal d'ajout rapide\r\n        const fab = document.getElementById('fab-add-expense');\r\n        const quickModal = document.getElementById('quick-expense-modal');\r\n        const quickForm = document.getElementById('quick-expense-form');\r\n        \r\n        if (fab && quickModal && quickForm) {\r\n            fab.addEventListener('click', () => {\r\n                this.openQuickExpenseModal();\r\n            });\r\n\r\n            document.querySelectorAll('.close-quick-expense').forEach(btn => {\r\n                btn.addEventListener('click', () => quickModal.classList.add('hidden'));\r\n            });\r\n            \r\n            quickModal.addEventListener('click', (e) => {\r\n                if ((e.target as HTMLElement).id === 'quick-expense-modal') quickModal.classList.add('hidden');\r\n            });\r\n\r\n            quickForm.addEventListener('submit', (e) => {\r\n                e.preventDefault();\r\n                this.addQuickExpense();\r\n            });\r\n        }\r\n\r\n        // Raccourcis clavier\r\n        document.addEventListener('keydown', (e) => {\r\n            if (e.ctrlKey && e.key === 'n') {\r\n                e.preventDefault();\r\n                document.getElementById('expense-amount')!.focus();\r\n                this.uiManager.showNotification('üí° Raccourci: Nouvelle d√©pense');\r\n            } else if (e.ctrlKey && e.key === 't') {\r\n                e.preventDefault();\r\n                this.toggleTheme();\r\n            } else if (e.key === 'Escape') {\r\n                document.querySelectorAll('.fixed.inset-0').forEach(modal => {\r\n                    if (!modal.classList.contains('hidden')) {\r\n                        modal.classList.add('hidden');\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        // Recherche dans les transactions\r\n        document.addEventListener('input', (e) => {\r\n            const target = e.target as HTMLElement;\r\n            if (target.id === 'transaction-search') {\r\n                this.handleTransactionSearch((target as HTMLInputElement).value);\r\n            }\r\n        });\r\n\r\n        document.addEventListener('click', (e) => {\r\n            const target = e.target as HTMLElement;\r\n            if (target.closest('#clear-search')) {\r\n                (document.getElementById('transaction-search') as HTMLInputElement).value = '';\r\n                document.getElementById('clear-search')!.classList.add('hidden');\r\n                this.handleTransactionSearch('');\r\n            }\r\n        });\r\n\r\n        document.getElementById('settings-modal')!.addEventListener('click', (e) => {\r\n            if ((e.target as HTMLElement).id === 'settings-modal') {\r\n                document.getElementById('settings-modal')!.classList.add('hidden');\r\n            }\r\n        });\r\n    }\r\n\r\n    // Gestion du setup initial\r\n    handleSetup(): void {\r\n        const salary = parseFloat((document.getElementById('monthly-salary') as HTMLInputElement).value);\r\n        const categoryInputs = document.querySelectorAll<HTMLInputElement>('#categories-setup input[type=\"number\"]');\r\n        \r\n        if (salary <= 0) {\r\n            alert('Veuillez saisir un salaire valide');\r\n            return;\r\n        }\r\n        \r\n        let totalAllocated = 0;\r\n        categoryInputs.forEach(input => {\r\n            totalAllocated += parseFloat(input.value) || 0;\r\n        });\r\n\r\n        if (totalAllocated > salary) {\r\n            alert('Le total des budgets d√©passe votre salaire. Veuillez ajuster les montants.');\r\n            return;\r\n        }\r\n\r\n        const data = this.dataManager.getData();\r\n        data.salary = salary;\r\n        data.categories = {};\r\n\r\n        categoryInputs.forEach(input => {\r\n            const key = input.name;\r\n            const budget = parseFloat(input.value) || 0;\r\n            const categoryName = this.categoryManager.getCategoryDisplayName(key);\r\n            \r\n            data.categories[key] = {\r\n                name: categoryName,\r\n                budget: budget,\r\n                spent: 0,\r\n                percentage: (budget / salary) * 100\r\n            };\r\n        });\r\n\r\n        this.dataManager.saveData();\r\n        this.showDashboard();\r\n    }\r\n\r\n    // Mise √† jour du total allou√©\r\n    updateTotalAmount(): void {\r\n        const salaryInput = document.getElementById('monthly-salary') as HTMLInputElement;\r\n        const salary = parseFloat(salaryInput.value) || 0;\r\n        \r\n        const inputs = document.querySelectorAll<HTMLInputElement>('#categories-setup input[type=\"number\"]');\r\n        let totalAllocated = 0;\r\n        inputs.forEach(input => {\r\n            totalAllocated += parseFloat(input.value) || 0;\r\n        });\r\n        \r\n        this.uiManager.updateTotalAmount(salary, totalAllocated);\r\n    }\r\n\r\n    // Allouer le budget restant\r\n    allocateRemainingBudget(categoryKey: string): void {\r\n        try {\r\n            const salaryInput = document.getElementById('monthly-salary') as HTMLInputElement;\r\n            const salary = parseFloat(salaryInput.value) || 0;\r\n            \r\n            if (salary === 0) {\r\n                alert('Veuillez d\\'abord saisir votre salaire mensuel');\r\n                return;\r\n            }\r\n            \r\n            const remaining = this.categoryManager.getRemainingBudgetToAllocate(categoryKey);\r\n            \r\n            if (remaining < 0) {\r\n                alert('Le budget total d√©passe d√©j√† le salaire. R√©duisez d\\'abord les autres cat√©gories.');\r\n                return;\r\n            }\r\n            \r\n            const targetInput = document.querySelector<HTMLInputElement>(`input[name=\"${categoryKey}\"]`);\r\n            if (targetInput) {\r\n                targetInput.value = remaining.toFixed(2);\r\n                this.updateTotalAmount();\r\n                this.uiManager.showNotification(`${remaining.toFixed(2)}‚Ç¨ allou√©s`);\r\n            }\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    // Ajouter une d√©pense\r\n    addExpense(): void {\r\n        try {\r\n            const category = (document.getElementById('expense-category') as HTMLSelectElement).value;\r\n            const amount = parseFloat((document.getElementById('expense-amount') as HTMLInputElement).value);\r\n            const description = (document.getElementById('expense-description') as HTMLInputElement).value;\r\n\r\n            this.transactionManager.addExpense(category, amount, description);\r\n            this.dataManager.saveData();\r\n            this.updateDashboard();\r\n\r\n            (document.getElementById('expense-form') as HTMLFormElement).reset();\r\n            \r\n            const data = this.dataManager.getData();\r\n            this.uiManager.showNotification(`D√©pense de ${amount.toFixed(2)}‚Ç¨ ajout√©e √† ${data.categories[category].name}`);\r\n            this.checkAdvancedAlerts({ changedCategory: category });\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    // Ajouter une d√©pense rapide\r\n    addQuickExpense(): void {\r\n        try {\r\n            const category = (document.getElementById('quick-expense-category') as HTMLSelectElement)?.value || '';\r\n            const amount = parseFloat((document.getElementById('quick-expense-amount') as HTMLInputElement)?.value || '0');\r\n            const description = (document.getElementById('quick-expense-description') as HTMLInputElement)?.value || '';\r\n            \r\n            this.transactionManager.addExpense(category, amount, description);\r\n            this.dataManager.saveData();\r\n            this.updateDashboard();\r\n            \r\n            const data = this.dataManager.getData();\r\n            this.uiManager.showNotification(`D√©pense de ${amount.toFixed(2)}‚Ç¨ ajout√©e √† ${data.categories[category].name}`);\r\n            this.checkAdvancedAlerts({ changedCategory: category });\r\n            \r\n            (document.getElementById('quick-expense-form') as HTMLFormElement).reset();\r\n            document.getElementById('quick-expense-modal')!.classList.add('hidden');\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    // Ouvrir le modal d'ajout rapide\r\n    openQuickExpenseModal(): void {\r\n        const data = this.dataManager.getData();\r\n        const select = document.getElementById('quick-expense-category') as HTMLSelectElement;\r\n        \r\n        if (select) {\r\n            select.innerHTML = '<option value=\"\">Choisir une cat√©gorie</option>';\r\n            Object.entries(data.categories).forEach(([key, category]) => {\r\n                const option = document.createElement('option');\r\n                option.value = key;\r\n                option.textContent = category.name;\r\n                select.appendChild(option);\r\n            });\r\n        }\r\n        \r\n        document.getElementById('quick-expense-modal')!.classList.remove('hidden');\r\n        setTimeout(() => document.getElementById('quick-expense-amount')?.focus(), 50);\r\n    }\r\n\r\n    // Toggle theme\r\n    toggleTheme(): void {\r\n        const result = this.themeManager.toggleTheme();\r\n        this.uiManager.showNotification(result.message);\r\n        \r\n        if (this.chartManager) {\r\n            this.chartManager.updateChart();\r\n        }\r\n    }\r\n\r\n    // R√©initialiser le mois\r\n    resetMonth(): void {\r\n        this.dataManager.resetMonth();\r\n        this.dataManager.saveData();\r\n        this.updateDashboard();\r\n        this.uiManager.showNotification('Nouveau mois initialis√© !');\r\n        document.getElementById('settings-modal')!.classList.add('hidden');\r\n    }\r\n\r\n    // Export des donn√©es\r\n    exportData(): void {\r\n        this.exportManager.exportData();\r\n        this.uiManager.showNotification('Donn√©es export√©es avec succ√®s !');\r\n    }\r\n\r\n    // Import des donn√©es\r\n    async importData(event: Event): Promise<void> {\r\n        const input = event.target as HTMLInputElement;\r\n        const file = input.files?.[0];\r\n        if (!file) return;\r\n\r\n        try {\r\n            const importedData = await this.exportManager.importData(file);\r\n            \r\n            if (confirm('√ätes-vous s√ªr de vouloir importer ces donn√©es ? Cela remplacera vos donn√©es actuelles.')) {\r\n                const currentData = this.dataManager.getData();\r\n                this.dataManager.setData({ ...currentData, ...importedData });\r\n                await this.dataManager.saveData();\r\n                this.updateDashboard();\r\n                this.uiManager.showNotification('Donn√©es import√©es avec succ√®s !');\r\n            }\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n        \r\n        document.getElementById('settings-modal')!.classList.add('hidden');\r\n    }\r\n\r\n    // R√©initialiser tout\r\n    async resetAll(): Promise<void> {\r\n        this.dataManager.resetAll();\r\n        await this.dataManager.saveData();\r\n        location.reload();\r\n    }\r\n\r\n    // Export PDF\r\n    async exportToPDF(): Promise<void> {\r\n        try {\r\n            this.uiManager.showNotification('üìÑ G√©n√©ration du PDF en cours...');\r\n            await this.exportManager.exportToPDF();\r\n            this.uiManager.showNotification('‚úÖ PDF export√© avec succ√®s !');\r\n        } catch (error) {\r\n            console.error('Erreur export PDF:', error);\r\n            this.uiManager.showNotification('‚ùå Erreur lors de l\\'export PDF', 'error');\r\n        }\r\n    }\r\n\r\n    // V√©rification d'alertes avanc√©es\r\n    checkAdvancedAlerts(context: { changedCategory?: string } = {}): void {\r\n        try {\r\n            const data = this.dataManager.getData();\r\n            const totalBudget = Object.values(data.categories).reduce((sum, cat) => sum + (cat.budget || 0), 0);\r\n            const totalSpent = Object.values(data.categories).reduce((sum, cat) => sum + (cat.spent || 0), 0);\r\n            const globalPercent = totalBudget > 0 ? (totalSpent / totalBudget) * 100 : 0;\r\n\r\n            const messages: string[] = [];\r\n\r\n            if (globalPercent >= 100) {\r\n                messages.push('‚ö†Ô∏è Budget global d√©pass√© !');\r\n            } else if (globalPercent >= 80) {\r\n                messages.push('‚ö†Ô∏è Vous avez d√©pass√© 80% du budget global');\r\n            }\r\n\r\n            const categoriesToCheck = context.changedCategory ? [context.changedCategory] : Object.keys(data.categories);\r\n            categoriesToCheck.forEach(key => {\r\n                const cat = data.categories[key];\r\n                if (!cat) return;\r\n                const percent = cat.budget > 0 ? (cat.spent / cat.budget) * 100 : 0;\r\n                if (percent >= 100) {\r\n                    messages.push(`üö® Cat√©gorie ${cat.name}: budget d√©pass√© !`);\r\n                } else if (percent >= 80) {\r\n                    messages.push(`‚ö†Ô∏è Cat√©gorie ${cat.name}: 80% du budget utilis√©`);\r\n                }\r\n            });\r\n\r\n            if (messages.length === 0) return;\r\n\r\n            const unique = [...new Set(messages)];\r\n            const key = unique.join('|');\r\n            const now = Date.now();\r\n            if (this.lastAlertKey === key && now - this.lastAlertAt < 4000) {\r\n                return;\r\n            }\r\n            this.lastAlertKey = key;\r\n            this.lastAlertAt = now;\r\n\r\n            const html = unique.join('<br>');\r\n            this.uiManager.showNotification(html, 'error');\r\n        } catch (e) {\r\n            // Ignorer silencieusement les erreurs d'alerte\r\n        }\r\n    }\r\n\r\n    // M√©thodes d√©l√©gu√©es (suite dans le prochain fichier pour √©viter la limite de taille)\r\n    openEditBudgetModal(): void {\r\n        this.uiManager.openEditBudgetModal();\r\n        this.populateEditCategories();\r\n        this.updateEditTotals();\r\n    }\r\n\r\n    populateEditCategories(): void {\r\n        const data = this.dataManager.getData();\r\n        const container = document.getElementById('edit-categories-list')!;\r\n        container.innerHTML = '';\r\n\r\n        Object.entries(data.categories).forEach(([key, category]) => {\r\n            const categoryDiv = document.createElement('div');\r\n            categoryDiv.className = 'flex items-center gap-3 p-4 bg-gray-100 dark:bg-gray-700 rounded-lg';\r\n            categoryDiv.innerHTML = `\r\n                <label class=\"flex-1 font-semibold text-gray-800 dark:text-gray-200\">${category.name}</label>\r\n                <div class=\"flex items-center gap-2\">\r\n                    <span class=\"text-sm text-gray-600 dark:text-gray-400\">D√©pens√©: ${category.spent.toFixed(2)}‚Ç¨</span>\r\n                    <input type=\"number\" name=\"edit-${key}\" value=\"${category.budget}\" min=\"0\" step=\"0.01\" \r\n                           class=\"w-24 p-2 border border-gray-300 dark:border-gray-600 rounded text-center edit-category-input dark:bg-gray-800 dark:text-gray-200\">\r\n                    <span class=\"text-gray-600 dark:text-gray-400\">‚Ç¨</span>\r\n                    <button type=\"button\" class=\"btn-edit-rest bg-primary hover:bg-primary-dark text-white px-3 py-1 rounded text-sm transition-all hover:scale-105\" data-category=\"${key}\">\r\n                        Reste ici\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn-delete-category bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded text-sm transition-all hover:scale-105\" data-category=\"${key}\" title=\"Supprimer\">\r\n                        <i class=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </div>\r\n            `;\r\n            container.appendChild(categoryDiv);\r\n        });\r\n\r\n        container.querySelectorAll('.edit-category-input').forEach(input => {\r\n            input.addEventListener('input', () => this.updateEditTotals());\r\n        });\r\n\r\n        container.querySelectorAll('.btn-edit-rest').forEach(button => {\r\n            button.addEventListener('click', (e) => {\r\n                const target = e.target as HTMLElement;\r\n                this.allocateRemainingEditBudget(target.dataset.category!);\r\n            });\r\n        });\r\n\r\n        container.querySelectorAll('.btn-delete-category').forEach(button => {\r\n            button.addEventListener('click', (e) => {\r\n                const target = e.target as HTMLElement;\r\n                this.deleteCategory(target.closest<HTMLElement>('button')!.dataset.category!);\r\n            });\r\n        });\r\n    }\r\n\r\n    updateEditTotals(): void {\r\n        const salary = parseFloat((document.getElementById('edit-salary') as HTMLInputElement).value) || 0;\r\n        const inputs = document.querySelectorAll<HTMLInputElement>('.edit-category-input');\r\n        \r\n        let totalAllocated = 0;\r\n        inputs.forEach(input => {\r\n            totalAllocated += parseFloat(input.value) || 0;\r\n        });\r\n        \r\n        this.uiManager.updateEditTotals(salary, totalAllocated);\r\n    }\r\n\r\n    allocateRemainingEditBudget(categoryKey: string): void {\r\n        const salary = parseFloat((document.getElementById('edit-salary') as HTMLInputElement).value) || 0;\r\n        \r\n        if (salary === 0) {\r\n            alert('Veuillez d\\'abord saisir votre salaire mensuel');\r\n            return;\r\n        }\r\n        \r\n        const inputs = document.querySelectorAll<HTMLInputElement>('.edit-category-input');\r\n        let totalAllocated = 0;\r\n        \r\n        inputs.forEach(input => {\r\n            const inputName = input.name.replace('edit-', '');\r\n            if (inputName !== categoryKey) {\r\n                totalAllocated += parseFloat(input.value) || 0;\r\n            }\r\n        });\r\n        \r\n        const remaining = salary - totalAllocated;\r\n        \r\n        if (remaining < 0) {\r\n            alert('Le budget total d√©passe d√©j√† le salaire. R√©duisez d\\'abord les autres cat√©gories.');\r\n            return;\r\n        }\r\n        \r\n        const targetInput = document.querySelector<HTMLInputElement>(`input[name=\"edit-${categoryKey}\"]`);\r\n        if (targetInput) {\r\n            targetInput.value = remaining.toFixed(2);\r\n            this.updateEditTotals();\r\n            const data = this.dataManager.getData();\r\n            this.uiManager.showNotification(`${remaining.toFixed(2)}‚Ç¨ allou√©s √† ${data.categories[categoryKey].name}`);\r\n        }\r\n    }\r\n\r\n    saveEditedBudgets(): void {\r\n        const newSalary = parseFloat((document.getElementById('edit-salary') as HTMLInputElement).value);\r\n        const inputs = document.querySelectorAll<HTMLInputElement>('.edit-category-input');\r\n        \r\n        if (newSalary <= 0) {\r\n            alert('Veuillez saisir un salaire valide');\r\n            return;\r\n        }\r\n        \r\n        let totalAllocated = 0;\r\n        inputs.forEach(input => {\r\n            totalAllocated += parseFloat(input.value) || 0;\r\n        });\r\n\r\n        if (totalAllocated > newSalary) {\r\n            alert('Le total des budgets d√©passe votre salaire. Veuillez ajuster les montants.');\r\n            return;\r\n        }\r\n\r\n        const data = this.dataManager.getData();\r\n        data.salary = newSalary;\r\n\r\n        inputs.forEach(input => {\r\n            const categoryKey = input.name.replace('edit-', '');\r\n            const newBudget = parseFloat(input.value) || 0;\r\n            \r\n            if (data.categories[categoryKey]) {\r\n                data.categories[categoryKey].budget = newBudget;\r\n                data.categories[categoryKey].percentage = newSalary > 0 ? (newBudget / newSalary) * 100 : 0;\r\n            }\r\n        });\r\n\r\n        this.dataManager.saveData();\r\n        this.updateDashboard();\r\n        \r\n        document.getElementById('edit-budget-modal')!.classList.add('hidden');\r\n        this.uiManager.showNotification('Budgets mis √† jour avec succ√®s !');\r\n    }\r\n\r\n    addNewCategory(): void {\r\n        try {\r\n            const name = (document.getElementById('new-category-name') as HTMLInputElement).value.trim();\r\n            const budget = parseFloat((document.getElementById('new-category-budget') as HTMLInputElement).value);\r\n            const color = (document.getElementById('new-category-color') as HTMLInputElement).value;\r\n\r\n            this.categoryManager.addCategory(name, budget, color);\r\n            this.dataManager.saveData();\r\n            this.populateEditCategories();\r\n            this.updateEditTotals();\r\n            \r\n            document.getElementById('new-category-modal')!.classList.add('hidden');\r\n            (document.getElementById('new-category-form') as HTMLFormElement).reset();\r\n            \r\n            this.uiManager.showNotification(`Cat√©gorie \"${name}\" cr√©√©e avec succ√®s ! üéâ`);\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    deleteCategory(categoryKey: string): void {\r\n        try {\r\n            const result = this.categoryManager.deleteCategory(categoryKey);\r\n            \r\n            let confirmMessage = `Supprimer la cat√©gorie \"${result.category.name}\" ?`;\r\n            if (result.transactionsCount > 0) {\r\n                confirmMessage += `\\n\\n‚ö†Ô∏è Attention : ${result.transactionsCount} transaction(s) seront √©galement supprim√©e(s).`;\r\n            }\r\n\r\n            if (!confirm(confirmMessage)) {\r\n                const data = this.dataManager.getData();\r\n                data.categories[categoryKey] = result.category;\r\n                return;\r\n            }\r\n\r\n            this.dataManager.saveData();\r\n            this.populateEditCategories();\r\n            this.updateEditTotals();\r\n            \r\n            this.uiManager.showNotification(`Cat√©gorie \"${result.category.name}\" supprim√©e`);\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    // Gestion des transactions\r\n    openTransactionsModal(initialFilter: string = 'all'): void {\r\n        const data = this.dataManager.getData();\r\n        const filtersContainer = document.getElementById('category-filters')!;\r\n        \r\n        if (filtersContainer.children.length === 0) {\r\n            Object.entries(data.categories).forEach(([key, category]) => {\r\n                const filterBtn = document.createElement('button');\r\n                filterBtn.className = 'filter-btn bg-gray-200 hover:bg-gray-300 text-gray-700 px-3 py-1 rounded-full text-sm transition-all duration-300 transform hover:scale-105';\r\n                filterBtn.dataset.category = key;\r\n                filterBtn.textContent = category.name;\r\n                filterBtn.addEventListener('click', (e) => {\r\n                    const target = e.target as HTMLElement;\r\n                    this.uiManager.updateButtonColors(target.dataset.category!);\r\n                    const searchTerm = (document.getElementById('transaction-search') as HTMLInputElement)?.value || '';\r\n                    this.filterTransactions(target.dataset.category!, searchTerm);\r\n                });\r\n                filtersContainer.appendChild(filterBtn);\r\n            });\r\n        }\r\n        \r\n        this.uiManager.updateButtonColors(initialFilter);\r\n        this.filterTransactions(initialFilter);\r\n        \r\n        document.getElementById('all-transactions-modal')!.classList.remove('hidden');\r\n    }\r\n\r\n    handleTransactionSearch(searchTerm: string): void {\r\n        const clearBtn = document.getElementById('clear-search')!;\r\n        \r\n        if (searchTerm.trim() === '') {\r\n            clearBtn.classList.add('hidden');\r\n        } else {\r\n            clearBtn.classList.remove('hidden');\r\n        }\r\n        \r\n        const activeFilter = document.querySelector<HTMLElement>('.filter-btn.active')?.dataset.category || 'all';\r\n        this.filterTransactions(activeFilter, searchTerm);\r\n    }\r\n\r\n    filterTransactions(categoryFilter: string, searchTerm: string = ''): void {\r\n        const data = this.dataManager.getData();\r\n        const modalTitle = document.getElementById('transactions-modal-title')!;\r\n        const categoryStats = document.getElementById('category-stats')!;\r\n        const globalStats = document.getElementById('global-stats')!;\r\n        \r\n        if (categoryFilter === 'all') {\r\n            modalTitle.textContent = 'Toutes les Transactions';\r\n            categoryStats.classList.add('hidden');\r\n            \r\n            const stats = this.transactionManager.getGlobalStats();\r\n            document.getElementById('global-budget')!.textContent = `${stats.budget.toFixed(2)}‚Ç¨`;\r\n            document.getElementById('global-spent')!.textContent = `${stats.spent.toFixed(2)}‚Ç¨`;\r\n            document.getElementById('global-remaining')!.textContent = `${stats.remaining.toFixed(2)}‚Ç¨`;\r\n            document.getElementById('global-percentage')!.textContent = `${stats.percentage.toFixed(1)}% utilis√©`;\r\n            \r\n            const progressBar = document.getElementById('global-progress-bar')!;\r\n            const progressWidth = Math.min(stats.percentage, 100);\r\n            (progressBar as HTMLElement).style.width = `${progressWidth}%`;\r\n            \r\n            if (stats.percentage > 100) {\r\n                progressBar.className = 'h-full bg-gradient-to-r from-red-500 to-red-600 transition-all duration-700 ease-out relative shadow-sm';\r\n            } else if (stats.percentage > 80) {\r\n                progressBar.className = 'h-full bg-gradient-to-r from-yellow-500 to-orange-500 transition-all duration-700 ease-out relative shadow-sm';\r\n            } else {\r\n                progressBar.className = 'h-full bg-gradient-to-r from-green-500 to-green-600 transition-all duration-700 ease-out relative shadow-sm';\r\n            }\r\n            \r\n            globalStats.classList.remove('hidden');\r\n        } else {\r\n            const category = data.categories[categoryFilter];\r\n            modalTitle.textContent = `Transactions - ${category.name}`;\r\n            globalStats.classList.add('hidden');\r\n            \r\n            const stats = this.transactionManager.getCategoryStats(categoryFilter);\r\n            if (stats) {\r\n                document.getElementById('stats-budget')!.textContent = `${stats.budget.toFixed(2)}‚Ç¨`;\r\n                document.getElementById('stats-spent')!.textContent = `${stats.spent.toFixed(2)}‚Ç¨`;\r\n                document.getElementById('stats-remaining')!.textContent = `${stats.remaining.toFixed(2)}‚Ç¨`;\r\n                document.getElementById('stats-percentage')!.textContent = `${stats.percentage.toFixed(1)}% utilis√©`;\r\n                \r\n                const progressBar = document.getElementById('stats-progress-bar')!;\r\n                const progressWidth = Math.min(stats.percentage, 100);\r\n                (progressBar as HTMLElement).style.width = `${progressWidth}%`;\r\n                \r\n                if (stats.percentage > 100) {\r\n                    progressBar.className = 'h-full bg-gradient-to-r from-red-500 to-red-600 transition-all duration-700 ease-out relative shadow-sm';\r\n                } else if (stats.percentage > 80) {\r\n                    progressBar.className = 'h-full bg-gradient-to-r from-yellow-500 to-orange-500 transition-all duration-700 ease-out relative shadow-sm';\r\n                } else {\r\n                    progressBar.className = 'h-full bg-gradient-to-r from-blue-500 to-blue-600 transition-all duration-700 ease-out relative shadow-sm';\r\n                }\r\n            }\r\n            \r\n            categoryStats.classList.remove('hidden');\r\n        }\r\n        \r\n        const filteredTransactions = this.transactionManager.filterTransactions(categoryFilter, searchTerm);\r\n        \r\n        const container = document.getElementById('all-transactions-list')!;\r\n        const noTransactions = document.getElementById('no-transactions')!;\r\n        \r\n        if (filteredTransactions.length === 0) {\r\n            container.classList.add('hidden');\r\n            noTransactions.classList.remove('hidden');\r\n        } else {\r\n            container.classList.remove('hidden');\r\n            noTransactions.classList.add('hidden');\r\n            \r\n            container.innerHTML = '';\r\n            filteredTransactions.reverse().forEach(transaction => {\r\n                const date = new Date(transaction.date);\r\n                const category = data.categories[transaction.category];\r\n                \r\n                // Ignorer les transactions avec cat√©gorie supprim√©e\r\n                if (!category) {\r\n                    console.warn(`‚ö†Ô∏è Transaction avec cat√©gorie inexistante: ${transaction.category}`);\r\n                    return;\r\n                }\r\n                \r\n                const transactionElement = document.createElement('div');\r\n                transactionElement.className = 'bg-white p-4 rounded-lg shadow-md border-l-4 border-red-400 hover:shadow-lg transition-shadow';\r\n                transactionElement.innerHTML = `\r\n                    <div class=\"flex justify-between items-start mb-2\">\r\n                        <div class=\"flex-1\">\r\n                            ${categoryFilter === 'all' ? `\r\n                                <div class=\"flex items-center gap-2 mb-1\">\r\n                                    <span class=\"bg-primary text-white px-2 py-1 rounded-full text-xs font-medium\">${category.name}</span>\r\n                                </div>\r\n                            ` : ''}\r\n                            <div class=\"font-semibold text-gray-800\">${transaction.description || 'Aucune description'}</div>\r\n                            <div class=\"text-sm text-gray-600 mt-1\">${date.toLocaleDateString('fr-FR')} √† ${date.toLocaleTimeString('fr-FR', {hour: '2-digit', minute: '2-digit'})}</div>\r\n                        </div>\r\n                        <div class=\"flex items-center gap-3\">\r\n                            <div class=\"text-right\">\r\n                                <div class=\"font-bold text-red-600 text-xl\">-${transaction.amount.toFixed(2)}‚Ç¨</div>\r\n                            </div>\r\n                            <div class=\"flex flex-col gap-1\">\r\n                                <button class=\"edit-transaction-btn text-blue-600 hover:text-blue-800 text-sm p-2 rounded transition-colors\" data-transaction-id=\"${transaction.id}\" title=\"Modifier\">\r\n                                    <i class=\"fas fa-edit\"></i>\r\n                                </button>\r\n                                <button class=\"delete-transaction-btn text-red-600 hover:text-red-800 text-sm p-2 rounded transition-colors\" data-transaction-id=\"${transaction.id}\" title=\"Supprimer\">\r\n                                    <i class=\"fas fa-trash\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n                container.appendChild(transactionElement);\r\n            });\r\n        }\r\n    }\r\n\r\n    openEditTransactionModal(transactionId: string): void {\r\n        const transaction = this.transactionManager.getTransactionById(transactionId);\r\n        if (!transaction) return;\r\n\r\n        (document.getElementById('edit-transaction-category') as HTMLSelectElement).value = transaction.category;\r\n        (document.getElementById('edit-transaction-amount') as HTMLInputElement).value = transaction.amount.toString();\r\n        (document.getElementById('edit-transaction-description') as HTMLInputElement).value = transaction.description || '';\r\n\r\n        const data = this.dataManager.getData();\r\n        const categorySelect = document.getElementById('edit-transaction-category') as HTMLSelectElement;\r\n        categorySelect.innerHTML = '<option value=\"\">Choisir une cat√©gorie</option>';\r\n        Object.entries(data.categories).forEach(([key, category]) => {\r\n            const option = document.createElement('option');\r\n            option.value = key;\r\n            option.textContent = category.name;\r\n            if (key === transaction.category) {\r\n                option.selected = true;\r\n            }\r\n            categorySelect.appendChild(option);\r\n        });\r\n\r\n        this.editingTransactionId = transactionId;\r\n        document.getElementById('edit-transaction-modal')!.classList.remove('hidden');\r\n    }\r\n\r\n    saveEditedTransaction(): void {\r\n        try {\r\n            const transactionId = this.editingTransactionId!;\r\n            const newCategory = (document.getElementById('edit-transaction-category') as HTMLSelectElement).value;\r\n            const newAmount = parseFloat((document.getElementById('edit-transaction-amount') as HTMLInputElement).value);\r\n            const newDescription = (document.getElementById('edit-transaction-description') as HTMLInputElement).value;\r\n\r\n            this.transactionManager.editTransaction(transactionId, newCategory, newAmount, newDescription);\r\n            this.dataManager.saveData();\r\n            this.updateDashboard();\r\n\r\n            document.getElementById('edit-transaction-modal')!.classList.add('hidden');\r\n            this.editingTransactionId = null;\r\n\r\n            this.uiManager.showNotification('Transaction modifi√©e avec succ√®s !');\r\n            this.checkAdvancedAlerts({ changedCategory: newCategory });\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    deleteTransaction(transactionId: string): void {\r\n        try {\r\n            const transaction = this.transactionManager.getTransactionById(transactionId);\r\n            if (!transaction) return;\r\n\r\n            if (!confirm(`√ätes-vous s√ªr de vouloir supprimer cette transaction ?\\n\\n${transaction.description || 'Aucune description'}\\nMontant: ${transaction.amount.toFixed(2)}‚Ç¨`)) {\r\n                return;\r\n            }\r\n\r\n            this.transactionManager.deleteTransaction(transactionId);\r\n            this.dataManager.saveData();\r\n            this.updateDashboard();\r\n\r\n            this.uiManager.showNotification('Transaction supprim√©e avec succ√®s !');\r\n            this.checkAdvancedAlerts();\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    // Objectifs d'√©pargne\r\n    addSavingsGoal(): void {\r\n        try {\r\n            const name = (document.getElementById('goal-name') as HTMLInputElement).value;\r\n            const target = parseFloat((document.getElementById('goal-target') as HTMLInputElement).value);\r\n            const deadline = (document.getElementById('goal-deadline') as HTMLInputElement).value;\r\n            const current = parseFloat((document.getElementById('goal-current') as HTMLInputElement).value) || 0;\r\n\r\n            this.savingsManager.addSavingsGoal(name, target, deadline, current);\r\n            this.dataManager.saveData();\r\n            this.updateSavingsGoals();\r\n            \r\n            document.getElementById('goal-modal')!.classList.add('hidden');\r\n            (document.getElementById('goal-form') as HTMLFormElement).reset();\r\n            \r\n            this.uiManager.showNotification(`Objectif \"${name}\" cr√©√© avec succ√®s ! üéØ`);\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    updateSavingsGoals(): void {\r\n        const container = document.getElementById('savings-goals');\r\n        if (!container) return;\r\n        \r\n        const goals = this.savingsManager.getAllGoals();\r\n        \r\n        if (goals.length === 0) {\r\n            container.innerHTML = `\r\n                <div class=\"text-center text-gray-500 dark:text-gray-400 py-8\">\r\n                    <i class=\"fas fa-target text-4xl mb-4\"></i>\r\n                    <p>Aucun objectif d√©fini</p>\r\n                    <p class=\"text-sm\">Cr√©ez votre premier objectif d'√©pargne !</p>\r\n                </div>\r\n            `;\r\n            return;\r\n        }\r\n\r\n        container.innerHTML = goals.map(goal => {\r\n            const progress = this.savingsManager.getGoalProgress(goal.id);\r\n            if (!progress) return '';\r\n            \r\n            return `\r\n                <div class=\"bg-gray-50 dark:bg-gray-700 p-4 rounded-lg transition-colors duration-300 ${progress.isCompleted ? 'border-2 border-green-500' : ''}\">\r\n                    <div class=\"flex justify-between items-start mb-3\">\r\n                        <div>\r\n                            <h4 class=\"font-semibold text-gray-800 dark:text-gray-200 flex items-center gap-2\">\r\n                                ${goal.name}\r\n                                ${progress.isCompleted ? '<i class=\"fas fa-trophy text-yellow-500\"></i>' : ''}\r\n                            </h4>\r\n                            <p class=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                                ${goal.current.toFixed(2)}‚Ç¨ / ${goal.target.toFixed(2)}‚Ç¨\r\n                            </p>\r\n                        </div>\r\n                        <div class=\"text-right\">\r\n                            <p class=\"text-sm ${progress.daysLeft > 0 ? 'text-gray-600 dark:text-gray-400' : 'text-red-500'}\">\r\n                                ${progress.daysLeft > 0 ? `${progress.daysLeft} jours restants` : '√âch√©ance d√©pass√©e'}\r\n                            </p>\r\n                            <button class=\"text-red-500 hover:text-red-700 mt-1 delete-goal-btn\" data-goal-id=\"${goal.id}\">\r\n                                <i class=\"fas fa-trash text-sm\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"mb-3\">\r\n                        <div class=\"flex justify-between text-sm mb-1\">\r\n                            <span class=\"text-gray-600 dark:text-gray-400\">Progression</span>\r\n                            <span class=\"font-semibold ${progress.isCompleted ? 'text-green-600' : 'text-gray-800 dark:text-gray-200'}\">${progress.progress.toFixed(1)}%</span>\r\n                        </div>\r\n                        <div class=\"w-full bg-gray-300 dark:bg-gray-600 rounded-full h-3\">\r\n                            <div class=\"h-3 rounded-full transition-all duration-500 ${progress.isCompleted ? 'bg-green-500' : 'bg-blue-500'}\" \r\n                                 style=\"width: ${Math.min(progress.progress, 100)}%\"></div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"flex gap-2\">\r\n                        <button class=\"flex-1 bg-blue-500 hover:bg-blue-600 text-white py-2 px-3 rounded text-sm transition-all duration-300 add-to-goal-btn\" \r\n                                data-goal-id=\"${goal.id}\">\r\n                            <i class=\"fas fa-plus mr-1\"></i> Ajouter\r\n                        </button>\r\n                        <button class=\"flex-1 bg-gray-500 hover:bg-gray-600 text-white py-2 px-3 rounded text-sm transition-all duration-300 edit-goal-btn\" \r\n                                data-goal-id=\"${goal.id}\">\r\n                            <i class=\"fas fa-edit mr-1\"></i> Modifier\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }).join('');\r\n        \r\n        // Attacher les event listeners pour les boutons des objectifs\r\n        container.querySelectorAll('.delete-goal-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const goalId = (e.currentTarget as HTMLElement).dataset.goalId!;\r\n                this.deleteSavingsGoal(goalId);\r\n            });\r\n        });\r\n        \r\n        container.querySelectorAll('.add-to-goal-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const goalId = (e.currentTarget as HTMLElement).dataset.goalId!;\r\n                this.addToGoal(goalId);\r\n            });\r\n        });\r\n        \r\n        container.querySelectorAll('.edit-goal-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const goalId = (e.currentTarget as HTMLElement).dataset.goalId!;\r\n                this.editGoal(goalId);\r\n            });\r\n        });\r\n    }\r\n\r\n    addToGoal(goalId: string): void {\r\n        const amount = prompt('Montant √† ajouter √† l\\'objectif (‚Ç¨):');\r\n        if (!amount) return;\r\n        \r\n        try {\r\n            const result = this.savingsManager.addToGoal(goalId, parseFloat(amount));\r\n            this.dataManager.saveData();\r\n            this.updateSavingsGoals();\r\n            \r\n            if (result.justCompleted) {\r\n                this.uiManager.showNotification(`üéâ F√©licitations ! Objectif \"${result.goal.name}\" atteint !`);\r\n            }\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    deleteSavingsGoal(goalId: string): void {\r\n        if (!confirm('√ätes-vous s√ªr de vouloir supprimer cet objectif ?')) return;\r\n        \r\n        try {\r\n            this.savingsManager.deleteSavingsGoal(goalId);\r\n            this.dataManager.saveData();\r\n            this.updateSavingsGoals();\r\n            this.uiManager.showNotification('Objectif supprim√©');\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    editGoal(goalId: string): void {\r\n        const goal = this.savingsManager.getGoalById(goalId);\r\n        if (!goal) return;\r\n        \r\n        const newAmount = prompt(`Modifier le montant √©pargn√© pour \"${goal.name}\":`, goal.current.toString());\r\n        if (newAmount === null) return;\r\n        \r\n        try {\r\n            const result = this.savingsManager.editGoal(goalId, newAmount);\r\n            this.dataManager.saveData();\r\n            this.updateSavingsGoals();\r\n            \r\n            if (result.justCompleted) {\r\n                this.uiManager.showNotification(`üéâ F√©licitations ! Objectif \"${result.goal.name}\" atteint !`);\r\n            }\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    // Transactions r√©currentes\r\n    openRecurringModal(): void {\r\n        const data = this.dataManager.getData();\r\n        const select = document.getElementById('recurring-category') as HTMLSelectElement;\r\n        \r\n        if (select) {\r\n            select.innerHTML = '<option value=\"\">Choisir une cat√©gorie</option>';\r\n            Object.entries(data.categories).forEach(([key, category]) => {\r\n                const option = document.createElement('option');\r\n                option.value = key;\r\n                option.textContent = category.name;\r\n                select.appendChild(option);\r\n            });\r\n        }\r\n        \r\n        document.getElementById('recurring-modal')!.classList.remove('hidden');\r\n    }\r\n\r\n    addRecurringTransaction(): void {\r\n        try {\r\n            const name = (document.getElementById('recurring-name') as HTMLInputElement).value;\r\n            const category = (document.getElementById('recurring-category') as HTMLSelectElement).value;\r\n            const amount = parseFloat((document.getElementById('recurring-amount') as HTMLInputElement).value);\r\n            const frequency = (document.getElementById('recurring-frequency') as HTMLSelectElement).value as 'monthly' | 'weekly' | 'yearly';\r\n            const day = parseInt((document.getElementById('recurring-day') as HTMLInputElement).value);\r\n            const active = (document.getElementById('recurring-active') as HTMLInputElement).checked;\r\n\r\n            this.recurringManager.addRecurringTransaction(name, category, amount, frequency, day, active);\r\n            this.dataManager.saveData();\r\n            this.updateRecurringTransactions();\r\n            \r\n            document.getElementById('recurring-modal')!.classList.add('hidden');\r\n            (document.getElementById('recurring-form') as HTMLFormElement).reset();\r\n            \r\n            this.uiManager.showNotification(`Transaction r√©currente \"${name}\" cr√©√©e !`);\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    updateRecurringTransactions(): void {\r\n        const container = document.getElementById('recurring-transactions');\r\n        if (!container) return;\r\n\r\n        const recurrings = this.recurringManager.getAllRecurringTransactions();\r\n        \r\n        if (recurrings.length === 0) {\r\n            container.innerHTML = `\r\n                <div class=\"text-center text-gray-500 dark:text-gray-400 py-4\">\r\n                    <i class=\"fas fa-calendar-check text-3xl mb-2\"></i>\r\n                    <p class=\"text-sm\">Aucune transaction r√©currente</p>\r\n                </div>\r\n            `;\r\n            return;\r\n        }\r\n\r\n        const data = this.dataManager.getData();\r\n        container.innerHTML = recurrings.map(rec => {\r\n            const category = data.categories[rec.category];\r\n            return `\r\n                <div class=\"p-3 bg-gray-50 dark:bg-gray-700 rounded-lg flex justify-between items-center\">\r\n                    <div>\r\n                        <p class=\"font-semibold text-gray-800 dark:text-gray-200\">${rec.name}</p>\r\n                        <p class=\"text-sm text-gray-600 dark:text-gray-400\">${category?.name || rec.category} ‚Ä¢ ${rec.amount.toFixed(2)}‚Ç¨ ‚Ä¢ ${rec.frequency}</p>\r\n                    </div>\r\n                    <div class=\"flex gap-2\">\r\n                        <button class=\"text-${rec.active ? 'green' : 'gray'}-600 hover:text-${rec.active ? 'green' : 'gray'}-800 toggle-recurring-btn\" data-recurring-id=\"${rec.id}\">\r\n                            <i class=\"fas fa-${rec.active ? 'check-circle' : 'pause-circle'}\"></i>\r\n                        </button>\r\n                        <button class=\"text-red-600 hover:text-red-800 delete-recurring-btn\" data-recurring-id=\"${rec.id}\">\r\n                            <i class=\"fas fa-trash\"></i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }).join('');\r\n        \r\n        // Attacher les event listeners pour les boutons des transactions r√©currentes\r\n        container.querySelectorAll('.toggle-recurring-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const recurringId = (e.currentTarget as HTMLElement).dataset.recurringId!;\r\n                this.toggleRecurring(recurringId);\r\n            });\r\n        });\r\n        \r\n        container.querySelectorAll('.delete-recurring-btn').forEach(btn => {\r\n            btn.addEventListener('click', (e) => {\r\n                const recurringId = (e.currentTarget as HTMLElement).dataset.recurringId!;\r\n                this.deleteRecurring(recurringId);\r\n            });\r\n        });\r\n    }\r\n\r\n    toggleRecurring(recurringId: string): void {\r\n        try {\r\n            this.recurringManager.toggleRecurringTransaction(recurringId);\r\n            this.dataManager.saveData();\r\n            this.updateRecurringTransactions();\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    deleteRecurring(recurringId: string): void {\r\n        if (!confirm('Supprimer cette transaction r√©currente ?')) return;\r\n        \r\n        try {\r\n            this.recurringManager.deleteRecurringTransaction(recurringId);\r\n            this.dataManager.saveData();\r\n            this.updateRecurringTransactions();\r\n            this.uiManager.showNotification('Transaction r√©currente supprim√©e');\r\n        } catch (error) {\r\n            this.uiManager.showNotification((error as Error).message, 'error');\r\n        }\r\n    }\r\n\r\n    // Templates de budget\r\n    getBudgetTemplates(): Record<string, BudgetTemplate> {\r\n        return {\r\n            'etudiant': {\r\n                name: 'üéì √âtudiant',\r\n                description: 'Budget adapt√© pour un √©tudiant',\r\n                salary: 800,\r\n                categories: {\r\n                    'logement': { name: 'Logement', budget: 400, color: '#3b82f6', spent: 0 },\r\n                    'courses': { name: 'Courses', budget: 150, color: '#10b981', spent: 0 },\r\n                    'transport': { name: 'Transport', budget: 50, color: '#f59e0b', spent: 0 },\r\n                    'loisirs': { name: 'Loisirs', budget: 100, color: '#8b5cf6', spent: 0 },\r\n                    'telephone': { name: 'T√©l√©phone', budget: 20, color: '#ec4899', spent: 0 },\r\n                    'divers': { name: 'Divers', budget: 80, color: '#6b7280', spent: 0 }\r\n                }\r\n            },\r\n            'celibataire': {\r\n                name: 'üë§ C√©libataire',\r\n                description: 'Budget pour une personne seule',\r\n                salary: 2000,\r\n                categories: {\r\n                    'logement': { name: 'Logement', budget: 700, color: '#3b82f6', spent: 0 },\r\n                    'courses': { name: 'Courses', budget: 300, color: '#10b981', spent: 0 },\r\n                    'transport': { name: 'Transport', budget: 150, color: '#f59e0b', spent: 0 },\r\n                    'loisirs': { name: 'Loisirs', budget: 200, color: '#8b5cf6', spent: 0 },\r\n                    'sante': { name: 'Sant√©', budget: 100, color: '#ef4444', spent: 0 },\r\n                    'epargne': { name: '√âpargne', budget: 300, color: '#14b8a6', spent: 0 },\r\n                    'divers': { name: 'Divers', budget: 250, color: '#6b7280', spent: 0 }\r\n                }\r\n            },\r\n            'couple': {\r\n                name: 'üíë Couple',\r\n                description: 'Budget pour un couple sans enfants',\r\n                salary: 3500,\r\n                categories: {\r\n                    'logement': { name: 'Logement', budget: 1000, color: '#3b82f6', spent: 0 },\r\n                    'courses': { name: 'Courses', budget: 500, color: '#10b981', spent: 0 },\r\n                    'transport': { name: 'Transport', budget: 300, color: '#f59e0b', spent: 0 },\r\n                    'loisirs': { name: 'Loisirs', budget: 400, color: '#8b5cf6', spent: 0 },\r\n                    'restaurants': { name: 'Restaurants', budget: 250, color: '#f97316', spent: 0 },\r\n                    'sante': { name: 'Sant√©', budget: 150, color: '#ef4444', spent: 0 },\r\n                    'epargne': { name: '√âpargne', budget: 600, color: '#14b8a6', spent: 0 },\r\n                    'divers': { name: 'Divers', budget: 300, color: '#6b7280', spent: 0 }\r\n                }\r\n            },\r\n            'famille': {\r\n                name: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Famille',\r\n                description: 'Budget pour une famille avec enfants',\r\n                salary: 4500,\r\n                categories: {\r\n                    'logement': { name: 'Logement', budget: 1200, color: '#3b82f6', spent: 0 },\r\n                    'courses': { name: 'Courses', budget: 700, color: '#10b981', spent: 0 },\r\n                    'transport': { name: 'Transport', budget: 400, color: '#f59e0b', spent: 0 },\r\n                    'enfants': { name: 'Enfants', budget: 500, color: '#ec4899', spent: 0 },\r\n                    'loisirs': { name: 'Loisirs', budget: 300, color: '#8b5cf6', spent: 0 },\r\n                    'sante': { name: 'Sant√©', budget: 200, color: '#ef4444', spent: 0 },\r\n                    'education': { name: '√âducation', budget: 300, color: '#06b6d4', spent: 0 },\r\n                    'epargne': { name: '√âpargne', budget: 500, color: '#14b8a6', spent: 0 },\r\n                    'divers': { name: 'Divers', budget: 400, color: '#6b7280', spent: 0 }\r\n                }\r\n            },\r\n            'retraite': {\r\n                name: 'üèñÔ∏è Retrait√©',\r\n                description: 'Budget adapt√© pour un retrait√©',\r\n                salary: 1800,\r\n                categories: {\r\n                    'logement': { name: 'Logement', budget: 600, color: '#3b82f6', spent: 0 },\r\n                    'courses': { name: 'Courses', budget: 350, color: '#10b981', spent: 0 },\r\n                    'sante': { name: 'Sant√©', budget: 250, color: '#ef4444', spent: 0 },\r\n                    'loisirs': { name: 'Loisirs', budget: 200, color: '#8b5cf6', spent: 0 },\r\n                    'transport': { name: 'Transport', budget: 100, color: '#f59e0b', spent: 0 },\r\n                    'famille': { name: 'Famille', budget: 150, color: '#ec4899', spent: 0 },\r\n                    'divers': { name: 'Divers', budget: 150, color: '#6b7280', spent: 0 }\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    showTemplateModal(): void {\r\n        const modal = document.getElementById('template-modal')!;\r\n        const container = document.getElementById('templates-list')!;\r\n        const templates = this.getBudgetTemplates();\r\n\r\n        container.innerHTML = Object.entries(templates).map(([key, template]) => `\r\n            <div class=\"p-4 border-2 border-gray-200 dark:border-gray-600 rounded-xl hover:border-primary dark:hover:border-blue-400 transition-all duration-300 cursor-pointer template-item\" data-template=\"${key}\">\r\n                <div class=\"text-3xl mb-2\">${template.name.split(' ')[0]}</div>\r\n                <h4 class=\"font-bold text-lg text-gray-800 dark:text-gray-200 mb-2\">${template.name.split(' ').slice(1).join(' ')}</h4>\r\n                <p class=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">${template.description}</p>\r\n                <div class=\"flex items-center justify-between text-sm\">\r\n                    <span class=\"text-gray-600 dark:text-gray-400\">Revenu:</span>\r\n                    <span class=\"font-bold text-primary dark:text-blue-400\">${template.salary}‚Ç¨</span>\r\n                </div>\r\n                <div class=\"flex items-center justify-between text-sm mt-1\">\r\n                    <span class=\"text-gray-600 dark:text-gray-400\">Cat√©gories:</span>\r\n                    <span class=\"font-bold text-gray-700 dark:text-gray-300\">${Object.keys(template.categories).length}</span>\r\n                </div>\r\n            </div>\r\n        `).join('');\r\n\r\n        // Attacher les event listeners apr√®s cr√©ation du HTML\r\n        container.querySelectorAll('.template-item').forEach(item => {\r\n            item.addEventListener('click', () => {\r\n                const templateKey = (item as HTMLElement).dataset.template!;\r\n                this.loadTemplate(templateKey);\r\n            });\r\n        });\r\n\r\n        modal.classList.remove('hidden');\r\n    }\r\n\r\n    loadTemplate(templateKey: string): void {\r\n        const templates = this.getBudgetTemplates();\r\n        const template = templates[templateKey];\r\n\r\n        if (!template) {\r\n            this.uiManager.showNotification('Template introuvable', 'error');\r\n            return;\r\n        }\r\n\r\n        if (!confirm(`Charger le template \"${template.name}\" ?\\n\\nCela remplacera votre configuration actuelle (vos transactions seront conserv√©es).`)) {\r\n            return;\r\n        }\r\n\r\n        const data = this.dataManager.getData();\r\n        data.salary = template.salary;\r\n        data.categories = JSON.parse(JSON.stringify(template.categories));\r\n\r\n        Object.keys(data.categories).forEach(key => {\r\n            data.categories[key].spent = 0;\r\n        });\r\n\r\n        data.transactions.forEach(transaction => {\r\n            if (data.categories[transaction.category]) {\r\n                data.categories[transaction.category].spent += transaction.amount;\r\n            }\r\n        });\r\n\r\n        this.dataManager.saveData();\r\n        this.updateDashboard();\r\n        \r\n        document.getElementById('template-modal')!.classList.add('hidden');\r\n        this.uiManager.showNotification(`Template \"${template.name}\" charg√© avec succ√®s ! üéâ`);\r\n    }\r\n\r\n    updateTopExpenses(): void {\r\n        const container = document.getElementById('top-expenses');\r\n        if (!container) return;\r\n        \r\n        const topExpenses = this.transactionManager.getTopExpenses(5);\r\n        \r\n        if (topExpenses.length === 0) {\r\n            container.innerHTML = `\r\n                <div class=\"text-center text-gray-500 dark:text-gray-400 py-4\">\r\n                    <i class=\"fas fa-chart-bar text-3xl mb-2\"></i>\r\n                    <p class=\"text-sm\">Aucune d√©pense enregistr√©e</p>\r\n                </div>\r\n            `;\r\n            return;\r\n        }\r\n\r\n        const data = this.dataManager.getData();\r\n        container.innerHTML = topExpenses.map((t, index) => {\r\n            const medal = ['ü•á', 'ü•à', 'ü•â', '4Ô∏è‚É£', '5Ô∏è‚É£'][index];\r\n            const category = data.categories[t.category];\r\n            \r\n            return `\r\n                <div class=\"flex justify-between items-center p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                    <div class=\"flex items-center gap-3\">\r\n                        <span class=\"text-2xl\">${medal}</span>\r\n                        <div>\r\n                            <p class=\"font-semibold text-gray-800 dark:text-gray-200\">${t.description || 'Sans description'}</p>\r\n                            <p class=\"text-sm text-gray-600 dark:text-gray-400\">${category?.name || t.category}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"text-right\">\r\n                        <p class=\"font-bold text-red-600\">${t.amount.toFixed(2)}‚Ç¨</p>\r\n                    </div>\r\n                </div>\r\n            `;\r\n        }).join('');\r\n    }\r\n\r\n    // Ouvrir le modal de s√©lection de th√®me color√©\r\n    openColorThemeModal(): void {\r\n        const modal = document.getElementById('color-theme-modal');\r\n        if (modal) {\r\n            modal.classList.remove('hidden');\r\n            \r\n            // Mettre en √©vidence le th√®me actuel\r\n            const currentTheme = this.themeManager.getColorTheme();\r\n            document.querySelectorAll('.color-theme-option').forEach(btn => {\r\n                const btnTheme = (btn as HTMLElement).dataset.theme;\r\n                if (btnTheme === currentTheme) {\r\n                    btn.classList.add('ring-4', 'ring-offset-2', 'ring-primary');\r\n                } else {\r\n                    btn.classList.remove('ring-4', 'ring-offset-2', 'ring-primary');\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // Fermer le modal de s√©lection de th√®me color√©\r\n    closeColorThemeModal(): void {\r\n        const modal = document.getElementById('color-theme-modal');\r\n        if (modal) {\r\n            modal.classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    // Afficher le calendrier widget\r\n    renderWidgetCalendar(): void {\r\n        const monthTitle = document.getElementById('widget-calendar-month-title');\r\n        const grid = document.getElementById('widget-calendar-grid');\r\n        const projection = document.getElementById('widget-monthly-projection');\r\n\r\n        if (!monthTitle || !grid || !projection) return;\r\n\r\n        // Titre du mois\r\n        monthTitle.textContent = this.calendarManager.getMonthName();\r\n\r\n        // Projection mensuelle\r\n        const monthlyTotal = this.calendarManager.getMonthlyProjection();\r\n        projection.textContent = `${monthlyTotal.toFixed(2)}‚Ç¨`;\r\n\r\n        // G√©n√©rer la grille\r\n        const days = this.calendarManager.getMonthDays();\r\n        const data = this.dataManager.getData();\r\n\r\n        grid.innerHTML = days.map(day => {\r\n            const dayNum = day.date.getDate();\r\n            const hasTransactions = day.transactions.length > 0;\r\n            const hasRecurring = day.recurringTransactions.length > 0;\r\n            \r\n            let bgClass = 'bg-white dark:bg-gray-700';\r\n            let textClass = 'text-gray-800 dark:text-gray-200';\r\n            let borderClass = '';\r\n\r\n            if (!day.isCurrentMonth) {\r\n                bgClass = 'bg-gray-100 dark:bg-gray-800';\r\n                textClass = 'text-gray-400 dark:text-gray-600';\r\n            }\r\n\r\n            if (day.isToday) {\r\n                borderClass = 'ring-2 ring-primary';\r\n            }\r\n\r\n            // Indicateurs\r\n            let indicators = '';\r\n            if (hasTransactions) {\r\n                indicators += '<div class=\"w-2 h-2 bg-blue-500 rounded-full\"></div>';\r\n            }\r\n            if (hasRecurring) {\r\n                indicators += '<div class=\"w-2 h-2 bg-orange-500 rounded-full\"></div>';\r\n            }\r\n\r\n            // Tooltip avec d√©tails\r\n            let tooltip = '';\r\n            if (hasTransactions || hasRecurring) {\r\n                const transactionsList = day.transactions.map(t => {\r\n                    const cat = data.categories[t.category];\r\n                    return `${cat?.name || t.category}: ${t.amount}‚Ç¨`;\r\n                }).join(', ');\r\n\r\n                const recurringList = day.recurringTransactions.map(r => {\r\n                    return `${r.name}: ${r.amount}‚Ç¨ (pr√©vu)`;\r\n                }).join(', ');\r\n\r\n                tooltip = `title=\"${transactionsList}${transactionsList && recurringList ? ' | ' : ''}${recurringList}\"`;\r\n            }\r\n\r\n            return `\r\n                <div class=\"calendar-day ${bgClass} ${borderClass} p-2 rounded-lg min-h-[80px] cursor-pointer hover:shadow-md transition-shadow\" ${tooltip}>\r\n                    <div class=\"${textClass} font-semibold text-sm mb-1\">${dayNum}</div>\r\n                    <div class=\"flex flex-wrap gap-1\">\r\n                        ${indicators}\r\n                    </div>\r\n                    ${hasTransactions || hasRecurring ? `\r\n                        <div class=\"text-xs ${textClass} mt-1\">\r\n                            ${day.transactions.reduce((sum, t) => sum + t.amount, 0) + day.recurringTransactions.reduce((sum, r) => sum + r.amount, 0)}‚Ç¨\r\n                        </div>\r\n                    ` : ''}\r\n                </div>\r\n            `;\r\n        }).join('');\r\n    }\r\n\r\n    // Pull to refresh\r\n    async handlePullToRefresh(): Promise<void> {\r\n        console.log('üîÑ Pull to refresh...');\r\n        this.uiManager.showNotification('üîÑ Actualisation...', 'info');\r\n        \r\n        try {\r\n            // Recharger les donn√©es depuis le serveur\r\n            await this.dataManager.loadData();\r\n            this.updateDashboard();\r\n            this.uiManager.showNotification('‚úÖ Donn√©es actualis√©es', 'success');\r\n        } catch (error) {\r\n            this.uiManager.showNotification('‚ùå Erreur lors de l\\'actualisation', 'error');\r\n        }\r\n    }\r\n}\r\n\r\n// Initialisation de l'application\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    const manager = new BudgetManager();\r\n    (window as any).budgetManager = manager;\r\n});\r\n"],"names":["APIClient","baseURL","endpoint","options","url","config","response","error","data","transaction","id","ThemeManager","__publicField","theme","root","body","gradientClasses","NotificationManager","dataManager","uiManager","category","percentage","goal","progress","deadline","today","daysLeft","currentDay","recurring","message","type","DataManager","index","key","dataStr","dataBlob","link","file","resolve","reject","reader","e","imported","_a","UIManager","notification","now","monthNames","monthElement","totalSpent","remaining","salaryEl","spentEl","remainingEl","container","categoryCard","progressBarColor","btn","select","option","transactions","recentTransactions","date","modalId","activeCategory","activeBtn","salary","totalAllocated","totalElement","remainingElement","parentElement","Chart","registerables","ChartManager","themeManager","ctx","context","labels","cat","budgetData","spentData","budget","spent","evolutionData","isDark","textColor","gridColor","value","months","expenses","budgets","currentDate","monthKey","monthName","monthExpenses","t","transactionDate","tDate","tYear","tMonth","parts","year","month","sum","totalBudget","TransactionManager","amount","description","total","categoryFilter","searchTerm","filteredTransactions","searchLower","transactionId","newCategory","newAmount","newDescription","oldCategory","oldAmount","limit","a","b","categoryKey","categoryPercentage","totalRemaining","globalPercentage","CategoryManager","name","color","transactionsInCategory","r","newBudget","oldBudget","excludeCategory","SavingsManager","target","current","goalId","g","wasCompleted","isCompleted","RecurringManager","frequency","day","active","recurringId","currentMonth","processedCount","shouldProcess","ExportManager","pdf","jsPDF","yPos","s","c","percent","currentMonthKey","topTransactions","medal","pageCount","i","filename","DragDropManager","item","element","dragEvent","card","dropTarget","dropKey","draggedKey","categories","keys","draggedIndex","dropIndex","reorderedCategories","orderA","orderB","WidgetManager","_dataManager","saved","layout","w","widget","content","collapseBtn","dashboard","widgetId","isHidden","toolbar","hideBtn","showBtn","collapseBtnEdit","collapseBtnNormal","isCollapsed","_e","el","draggedId","dropId","draggedWidget","dropWidget","draggedOrder","dropOrder","draggedElement","dropElement","wasEditMode","modal","listContainer","visibleWidgets","hiddenWidgets","html","CalendarManager","firstDay","lastDay","startDay","days","prevMonthLastDay","isToday","remainingDays","dateStr","TouchGestureManager","deltaX","deltaY","categoryContainer","startY","isPulling","refreshThreshold","pullDistance","indicator","callback","tapStartTime","tapDuration","pressTimer","BudgetManager","retries","loaded","input","salaryInput","button","themeName","isEditMode","fab","quickModal","quickForm","categoryInputs","categoryName","inputs","targetInput","_b","_c","result","event","importedData","currentData","globalPercent","messages","unique","categoryDiv","newSalary","confirmMessage","initialFilter","filtersContainer","filterBtn","clearBtn","activeFilter","modalTitle","categoryStats","globalStats","stats","progressBar","progressWidth","noTransactions","transactionElement","categorySelect","goals","recurrings","rec","templates","template","templateKey","topExpenses","currentTheme","monthTitle","grid","projection","monthlyTotal","dayNum","hasTransactions","hasRecurring","bgClass","textClass","borderClass","indicators","tooltip","transactionsList","recurringList","manager"],"mappings":"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"}