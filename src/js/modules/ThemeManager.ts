import type { ThemeToggleResult } from '@/types';

// Gestionnaire de th√®me (mode sombre/clair)
export class ThemeManager {
    private darkMode: boolean;

    constructor() {
        this.darkMode = localStorage.getItem('darkMode') === 'true';
        this.initTheme();
    }

    // Initialisation du th√®me
    initTheme(): void {
        if (this.darkMode) {
            document.documentElement.classList.add('dark');
        } else {
            document.documentElement.classList.remove('dark');
        }
    }

    // Basculer entre mode sombre et clair
    toggleTheme(): ThemeToggleResult {
        this.darkMode = !this.darkMode;
        localStorage.setItem('darkMode', this.darkMode.toString());
        
        console.log('üåô Toggle th√®me:', this.darkMode ? 'Mode sombre' : 'Mode clair');
        console.log('üìã Classes sur <html>:', document.documentElement.classList.toString());
        
        if (this.darkMode) {
            document.documentElement.classList.add('dark');
            console.log('‚úÖ Classe "dark" ajout√©e');
            return { message: 'Mode sombre activ√© üåô', isDark: true };
        } else {
            document.documentElement.classList.remove('dark');
            console.log('‚úÖ Classe "dark" supprim√©e');
            return { message: 'Mode clair activ√© ‚òÄÔ∏è', isDark: false };
        }
    }

    // Obtenir l'√©tat actuel du th√®me
    isDarkMode(): boolean {
        return this.darkMode;
    }
}
